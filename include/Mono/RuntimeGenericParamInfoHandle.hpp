// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:23 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Mono.RuntimeStructs
#include "Mono/RuntimeStructs.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: GenericParameterAttributes
  struct GenericParameterAttributes;
}
// Completed forward declares
// Type namespace: Mono
namespace Mono {
  // Autogenerated type: Mono.RuntimeGenericParamInfoHandle
  struct RuntimeGenericParamInfoHandle : public System::ValueType {
    public:
    // private Mono.RuntimeStructs/GenericParamInfo* value
    // Offset: 0x0
    Mono::RuntimeStructs::GenericParamInfo* value;
    // Creating value type constructor for type: RuntimeGenericParamInfoHandle
    RuntimeGenericParamInfoHandle(Mono::RuntimeStructs::GenericParamInfo* value_ = {}) : value{value_} {}
    // System.Void .ctor(System.IntPtr ptr)
    // Offset: 0xA3CCE8
    static RuntimeGenericParamInfoHandle* New_ctor(System::IntPtr ptr);
    // System.Type[] get_Constraints()
    // Offset: 0xA3CD14
    ::Array<System::Type*>* get_Constraints();
    // System.Reflection.GenericParameterAttributes get_Attributes()
    // Offset: 0xA3CD1C
    System::Reflection::GenericParameterAttributes get_Attributes();
    // private System.Type[] GetConstraints()
    // Offset: 0xA3CD38
    ::Array<System::Type*>* GetConstraints();
    // private System.Int32 GetConstraintsCount()
    // Offset: 0xA3CD40
    int GetConstraintsCount();
  }; // Mono.RuntimeGenericParamInfoHandle
}
DEFINE_IL2CPP_ARG_TYPE(Mono::RuntimeGenericParamInfoHandle, "Mono", "RuntimeGenericParamInfoHandle");
#pragma pack(pop)
