// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:25 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: Unity.Collections.Allocator
#include "Unity/Collections/Allocator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Unity::Collections
namespace Unity::Collections {
  // Skipping declaration: Enumerator because it is already included!
}
// Completed forward declares
// Type namespace: Unity.Collections
namespace Unity::Collections {
  // Autogenerated type: Unity.Collections.NativeArray`1
  template<typename T>
  struct NativeArray_1 : public System::ValueType, public System::IDisposable, public System::Collections::Generic::IEnumerable_1<T>, public System::Collections::IEnumerable, public System::IEquatable_1<Unity::Collections::NativeArray_1<T>> {
    public:
    // Nested type: Unity::Collections::NativeArray_1::Enumerator<T>
    struct Enumerator;
    // Autogenerated type: Unity.Collections.NativeArray`1/Enumerator
    struct Enumerator : public System::ValueType, public ::il2cpp_utils::il2cpp_type_check::NestedType, public System::Collections::Generic::IEnumerator_1<T>, public System::Collections::IEnumerator, public System::IDisposable {
      public:
      using declaring_type = NativeArray_1<T>;
      // private Unity.Collections.NativeArray`1<T> m_Array
      // Offset: 0x0
      Unity::Collections::NativeArray_1<T> m_Array;
      // private System.Int32 m_Index
      // Offset: 0x0
      int m_Index;
      // Creating value type constructor for type: Enumerator
      Enumerator(Unity::Collections::NativeArray_1<T> m_Array_ = {}, int m_Index_ = {}) : m_Array{m_Array_}, m_Index{m_Index_} {}
      // public System.Void .ctor(Unity.Collections.NativeArray`1<T> array)
      // Offset: 0xA445C0
      static typename NativeArray_1<T>::Enumerator* New_ctor(Unity::Collections::NativeArray_1<T>& array) {
        return (typename NativeArray_1<T>::Enumerator*)CRASH_UNLESS(il2cpp_utils::New(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<typename NativeArray_1<T>::Enumerator>::get(), array));
      }
      // public System.Void Dispose()
      // Offset: 0xA445D4
      // Implemented from: System.IDisposable
      // Base method: System.Void IDisposable::Dispose()
      void Dispose() {
        CRASH_UNLESS(il2cpp_utils::RunMethod(*this, "Dispose"));
      }
      // Creating proxy method: System_IDisposable_Dispose
      // Maps to method: Dispose
      void System_IDisposable_Dispose() {
        Dispose();
      }
      // public System.Boolean MoveNext()
      // Offset: 0xA445D8
      // Implemented from: System.Collections.IEnumerator
      // Base method: System.Boolean IEnumerator::MoveNext()
      bool MoveNext() {
        return CRASH_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "MoveNext"));
      }
      // public System.Void Reset()
      // Offset: 0xA445F8
      // Implemented from: System.Collections.IEnumerator
      // Base method: System.Void IEnumerator::Reset()
      void Reset() {
        CRASH_UNLESS(il2cpp_utils::RunMethod(*this, "Reset"));
      }
      // Creating proxy method: System_Collections_IEnumerator_Reset
      // Maps to method: Reset
      void System_Collections_IEnumerator_Reset() {
        Reset();
      }
      // public T get_Current()
      // Offset: 0xA44604
      // Implemented from: System.Collections.Generic.IEnumerator`1
      // Base method: T IEnumerator`1::get_Current()
      T get_Current() {
        return CRASH_UNLESS(il2cpp_utils::RunMethod<T>(*this, "get_Current"));
      }
      // Creating proxy method: System_Collections_Generic_IEnumerator_1_get_Current
      // Maps to method: get_Current
      T System_Collections_Generic_IEnumerator_1_get_Current() {
        return get_Current();
      }
      // private System.Object System.Collections.IEnumerator.get_Current()
      // Offset: 0xA44614
      // Implemented from: System.Collections.IEnumerator
      // Base method: System.Object IEnumerator::get_Current()
      ::Il2CppObject* System_Collections_IEnumerator_get_Current() {
        return CRASH_UNLESS(il2cpp_utils::RunMethod<::Il2CppObject*>(*this, "System.Collections.IEnumerator.get_Current"));
      }
    }; // Unity.Collections.NativeArray`1/Enumerator
    // System.Void* m_Buffer
    // Offset: 0x0
    void* m_Buffer;
    // System.Int32 m_Length
    // Offset: 0x0
    int m_Length;
    // Unity.Collections.Allocator m_AllocatorLabel
    // Offset: 0x0
    Unity::Collections::Allocator m_AllocatorLabel;
    // Creating value type constructor for type: NativeArray_1
    NativeArray_1(void* m_Buffer_ = {}, int m_Length_ = {}, Unity::Collections::Allocator m_AllocatorLabel_ = {}) : m_Buffer{m_Buffer_}, m_Length{m_Length_}, m_AllocatorLabel{m_AllocatorLabel_} {}
    // public System.Int32 get_Length()
    // Offset: 0xA447AC
    int get_Length() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Length"));
    }
    // public T get_Item(System.Int32 index)
    // Offset: 0xA447B4
    T get_Item(int index) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<T>(*this, "get_Item", index));
    }
    // public System.Void set_Item(System.Int32 index, T value)
    // Offset: 0xA447C0
    void set_Item(int index, T value) {
      CRASH_UNLESS(il2cpp_utils::RunMethod(*this, "set_Item", index, value));
    }
    // private System.Void Deallocate()
    // Offset: 0xA447CC
    void Deallocate() {
      CRASH_UNLESS(il2cpp_utils::RunMethod(*this, "Deallocate"));
    }
    // public Unity.Collections.NativeArray`1/Enumerator<T> GetEnumerator()
    // Offset: 0xA44808
    typename Unity::Collections::NativeArray_1<T>::Enumerator GetEnumerator() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<typename Unity::Collections::NativeArray_1<T>::Enumerator>(*this, "GetEnumerator"));
    }
    // public System.Void Dispose()
    // Offset: 0xA44800
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose() {
      CRASH_UNLESS(il2cpp_utils::RunMethod(*this, "Dispose"));
    }
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose() {
      Dispose();
    }
    // private System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
    // Offset: 0xA44848
    // Implemented from: System.Collections.Generic.IEnumerable`1
    // Base method: System.Collections.Generic.IEnumerator`1<T> IEnumerable`1::GetEnumerator()
    System::Collections::Generic::IEnumerator_1<T>* System_Collections_Generic_IEnumerable_1_GetEnumerator() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerator_1<T>*>(*this, "System.Collections.Generic.IEnumerable<T>.GetEnumerator"));
    }
    // private System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    // Offset: 0xA44850
    // Implemented from: System.Collections.IEnumerable
    // Base method: System.Collections.IEnumerator IEnumerable::GetEnumerator()
    System::Collections::IEnumerator* System_Collections_IEnumerable_GetEnumerator() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(*this, "System.Collections.IEnumerable.GetEnumerator"));
    }
    // public System.Boolean Equals(Unity.Collections.NativeArray`1<T> other)
    // Offset: 0xA44858
    // Implemented from: System.IEquatable`1
    // Base method: System.Boolean IEquatable`1::Equals(Unity.Collections.NativeArray`1<T> other)
    bool Equals(Unity::Collections::NativeArray_1<T> other) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
    }
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xA4487C
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
    }
    // public override System.Int32 GetHashCode()
    // Offset: 0xA44884
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
    }
  }; // Unity.Collections.NativeArray`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(Unity::Collections::NativeArray_1, "Unity.Collections", "NativeArray`1");
#pragma pack(pop)
