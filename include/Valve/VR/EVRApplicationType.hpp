// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:10 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: Valve.VR
namespace Valve::VR {
  // Autogenerated type: Valve.VR.EVRApplicationType
  struct EVRApplicationType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_Other
    static constexpr const int VRApplication_Other = 0;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_Other
    static Valve::VR::EVRApplicationType _get_VRApplication_Other();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_Other
    static void _set_VRApplication_Other(Valve::VR::EVRApplicationType value);
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_Scene
    static constexpr const int VRApplication_Scene = 1;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_Scene
    static Valve::VR::EVRApplicationType _get_VRApplication_Scene();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_Scene
    static void _set_VRApplication_Scene(Valve::VR::EVRApplicationType value);
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_Overlay
    static constexpr const int VRApplication_Overlay = 2;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_Overlay
    static Valve::VR::EVRApplicationType _get_VRApplication_Overlay();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_Overlay
    static void _set_VRApplication_Overlay(Valve::VR::EVRApplicationType value);
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_Background
    static constexpr const int VRApplication_Background = 3;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_Background
    static Valve::VR::EVRApplicationType _get_VRApplication_Background();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_Background
    static void _set_VRApplication_Background(Valve::VR::EVRApplicationType value);
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_Utility
    static constexpr const int VRApplication_Utility = 4;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_Utility
    static Valve::VR::EVRApplicationType _get_VRApplication_Utility();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_Utility
    static void _set_VRApplication_Utility(Valve::VR::EVRApplicationType value);
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_VRMonitor
    static constexpr const int VRApplication_VRMonitor = 5;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_VRMonitor
    static Valve::VR::EVRApplicationType _get_VRApplication_VRMonitor();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_VRMonitor
    static void _set_VRApplication_VRMonitor(Valve::VR::EVRApplicationType value);
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_SteamWatchdog
    static constexpr const int VRApplication_SteamWatchdog = 6;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_SteamWatchdog
    static Valve::VR::EVRApplicationType _get_VRApplication_SteamWatchdog();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_SteamWatchdog
    static void _set_VRApplication_SteamWatchdog(Valve::VR::EVRApplicationType value);
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_Bootstrapper
    static constexpr const int VRApplication_Bootstrapper = 7;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_Bootstrapper
    static Valve::VR::EVRApplicationType _get_VRApplication_Bootstrapper();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_Bootstrapper
    static void _set_VRApplication_Bootstrapper(Valve::VR::EVRApplicationType value);
    // static field const value: static public Valve.VR.EVRApplicationType VRApplication_Max
    static constexpr const int VRApplication_Max = 8;
    // Get static field: static public Valve.VR.EVRApplicationType VRApplication_Max
    static Valve::VR::EVRApplicationType _get_VRApplication_Max();
    // Set static field: static public Valve.VR.EVRApplicationType VRApplication_Max
    static void _set_VRApplication_Max(Valve::VR::EVRApplicationType value);
    // Creating value type constructor for type: EVRApplicationType
    EVRApplicationType(int value_ = {}) : value{value_} {}
  }; // Valve.VR.EVRApplicationType
}
DEFINE_IL2CPP_ARG_TYPE(Valve::VR::EVRApplicationType, "Valve.VR", "EVRApplicationType");
#pragma pack(pop)
