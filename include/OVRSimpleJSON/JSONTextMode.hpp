// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:59 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: OVRSimpleJSON
namespace OVRSimpleJSON {
  // Autogenerated type: OVRSimpleJSON.JSONTextMode
  struct JSONTextMode : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public OVRSimpleJSON.JSONTextMode Compact
    static constexpr const int Compact = 0;
    // Get static field: static public OVRSimpleJSON.JSONTextMode Compact
    static OVRSimpleJSON::JSONTextMode _get_Compact();
    // Set static field: static public OVRSimpleJSON.JSONTextMode Compact
    static void _set_Compact(OVRSimpleJSON::JSONTextMode value);
    // static field const value: static public OVRSimpleJSON.JSONTextMode Indent
    static constexpr const int Indent = 1;
    // Get static field: static public OVRSimpleJSON.JSONTextMode Indent
    static OVRSimpleJSON::JSONTextMode _get_Indent();
    // Set static field: static public OVRSimpleJSON.JSONTextMode Indent
    static void _set_Indent(OVRSimpleJSON::JSONTextMode value);
    // Creating value type constructor for type: JSONTextMode
    JSONTextMode(int value_ = {}) : value{value_} {}
  }; // OVRSimpleJSON.JSONTextMode
}
DEFINE_IL2CPP_ARG_TYPE(OVRSimpleJSON::JSONTextMode, "OVRSimpleJSON", "JSONTextMode");
#pragma pack(pop)
