// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:26 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Number
#include "System/Number.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.Number/NumberBuffer
  struct Number::NumberBuffer : public System::ValueType {
    public:
    // Get static field: static public readonly System.Int32 NumberBufferBytes
    static int _get_NumberBufferBytes();
    // Set static field: static public readonly System.Int32 NumberBufferBytes
    static void _set_NumberBufferBytes(int value);
    // private System.Byte* baseAddress
    // Offset: 0x0
    uint8_t* baseAddress;
    // public System.Char* digits
    // Offset: 0x8
    ::Il2CppChar* digits;
    // public System.Int32 precision
    // Offset: 0x10
    int precision;
    // public System.Int32 scale
    // Offset: 0x14
    int scale;
    // public System.Boolean sign
    // Offset: 0x18
    bool sign;
    // Creating value type constructor for type: NumberBuffer
    NumberBuffer(uint8_t* baseAddress_ = {}, ::Il2CppChar* digits_ = {}, int precision_ = {}, int scale_ = {}, bool sign_ = {}) : baseAddress{baseAddress_}, digits{digits_}, precision{precision_}, scale{scale_}, sign{sign_} {}
    // public System.Void .ctor(System.Byte* stackBuffer)
    // Offset: 0xA42F14
    static Number::NumberBuffer* New_ctor(uint8_t* stackBuffer);
    // public System.Byte* PackForNative()
    // Offset: 0xA42F28
    uint8_t* PackForNative();
    // static private System.Void .cctor()
    // Offset: 0x1341930
    static void _cctor();
  }; // System.Number/NumberBuffer
}
DEFINE_IL2CPP_ARG_TYPE(System::Number::NumberBuffer, "System", "Number/NumberBuffer");
#pragma pack(pop)
