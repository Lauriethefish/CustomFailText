// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:25 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IAsyncResult
  class IAsyncResult;
  // Forward declaring type: AsyncCallback
  class AsyncCallback;
}
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.Comparison`1
  template<typename T>
  class Comparison_1 : public System::MulticastDelegate {
    public:
    // public System.Void .ctor(System.Object object, System.IntPtr method)
    // Offset: 0x1713DE8
    static Comparison_1<T>* New_ctor(::Il2CppObject* object, System::IntPtr method) {
      return (Comparison_1<T>*)CRASH_UNLESS(il2cpp_utils::New(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<Comparison_1<T>*>::get(), object, method));
    }
    // public System.Int32 Invoke(T x, T y)
    // Offset: 0x1713DFC
    int Invoke(T x, T y) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "Invoke", x, y));
    }
    // public System.IAsyncResult BeginInvoke(T x, T y, System.AsyncCallback callback, System.Object object)
    // Offset: 0x1714220
    System::IAsyncResult* BeginInvoke(T x, T y, System::AsyncCallback* callback, ::Il2CppObject* object) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", x, y, callback, object));
    }
    // public System.Int32 EndInvoke(System.IAsyncResult result)
    // Offset: 0x17142CC
    int EndInvoke(System::IAsyncResult* result) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "EndInvoke", result));
    }
  }; // System.Comparison`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Comparison_1, "System", "Comparison`1");
#pragma pack(pop)
