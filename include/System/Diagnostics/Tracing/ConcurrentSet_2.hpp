// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:42 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Diagnostics::Tracing
namespace System::Diagnostics::Tracing {
  // Forward declaring type: ConcurrentSetItem`2<ItemType, KeyType>
  template<typename ItemType, typename KeyType>
  class ConcurrentSetItem_2;
}
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Autogenerated type: System.Diagnostics.Tracing.ConcurrentSet`2
  template<typename ItemType, typename KeyType>
  struct ConcurrentSet_2 : public System::ValueType {
    public:
    // private ItemType[] items
    // Offset: 0x0
    ::Array<ItemType>* items;
    // Creating value type constructor for type: ConcurrentSet_2
    ConcurrentSet_2(::Array<ItemType>* items_ = {}) : items{items_} {}
    // public ItemType TryGet(KeyType key)
    // Offset: 0xA4C73C
    ItemType TryGet(KeyType key) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<ItemType>(*this, "TryGet", key));
    }
    // public ItemType GetOrAdd(ItemType newItem)
    // Offset: 0xA4C744
    ItemType GetOrAdd(ItemType newItem) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<ItemType>(*this, "GetOrAdd", newItem));
    }
  }; // System.Diagnostics.Tracing.ConcurrentSet`2
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_STRUCT(System::Diagnostics::Tracing::ConcurrentSet_2, "System.Diagnostics.Tracing", "ConcurrentSet`2");
#pragma pack(pop)
