// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:43 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System.Diagnostics.Tracing
namespace System::Diagnostics::Tracing {
  // Autogenerated type: System.Diagnostics.Tracing.EventDescriptor
  struct EventDescriptor : public System::ValueType {
    public:
    // private System.Int32 m_traceloggingId
    // Offset: 0x0
    int m_traceloggingId;
    // private System.UInt16 m_id
    // Offset: 0x0
    uint16_t m_id;
    // private System.Byte m_version
    // Offset: 0x2
    uint8_t m_version;
    // private System.Byte m_channel
    // Offset: 0x3
    uint8_t m_channel;
    // private System.Byte m_level
    // Offset: 0x4
    uint8_t m_level;
    // private System.Byte m_opcode
    // Offset: 0x5
    uint8_t m_opcode;
    // private System.UInt16 m_task
    // Offset: 0x6
    uint16_t m_task;
    // private System.Int64 m_keywords
    // Offset: 0x8
    int64_t m_keywords;
    // Creating value type constructor for type: EventDescriptor
    EventDescriptor(int m_traceloggingId_ = {}, uint16_t m_id_ = {}, uint8_t m_version_ = {}, uint8_t m_channel_ = {}, uint8_t m_level_ = {}, uint8_t m_opcode_ = {}, uint16_t m_task_ = {}, int64_t m_keywords_ = {}) : m_traceloggingId{m_traceloggingId_}, m_id{m_id_}, m_version{m_version_}, m_channel{m_channel_}, m_level{m_level_}, m_opcode{m_opcode_}, m_task{m_task_}, m_keywords{m_keywords_} {}
    // public System.Void .ctor(System.Int32 traceloggingId, System.Byte level, System.Byte opcode, System.Int64 keywords)
    // Offset: 0xA288D0
    static EventDescriptor* New_ctor(int traceloggingId, uint8_t level, uint8_t opcode, int64_t keywords);
    // public System.Void .ctor(System.Int32 id, System.Byte version, System.Byte channel, System.Byte level, System.Byte opcode, System.Int32 task, System.Int64 keywords)
    // Offset: 0xA288E8
    static EventDescriptor* New_ctor(int id, uint8_t version, uint8_t channel, uint8_t level, uint8_t opcode, int task, int64_t keywords);
    // public System.Int32 get_EventId()
    // Offset: 0xA288F0
    int get_EventId();
    // public System.Byte get_Version()
    // Offset: 0xA288F8
    uint8_t get_Version();
    // public System.Byte get_Channel()
    // Offset: 0xA28900
    uint8_t get_Channel();
    // public System.Byte get_Level()
    // Offset: 0xA28908
    uint8_t get_Level();
    // public System.Byte get_Opcode()
    // Offset: 0xA28910
    uint8_t get_Opcode();
    // public System.Int32 get_Task()
    // Offset: 0xA28918
    int get_Task();
    // public System.Int64 get_Keywords()
    // Offset: 0xA28920
    int64_t get_Keywords();
    // public System.Boolean Equals(System.Diagnostics.Tracing.EventDescriptor other)
    // Offset: 0xA28968
    bool Equals(System::Diagnostics::Tracing::EventDescriptor other);
    // public override System.Boolean Equals(System.Object obj)
    // Offset: 0xA28928
    // Implemented from: System.ValueType
    // Base method: System.Boolean ValueType::Equals(System.Object obj)
    bool Equals(::Il2CppObject* obj);
    // public override System.Int32 GetHashCode()
    // Offset: 0xA28930
    // Implemented from: System.ValueType
    // Base method: System.Int32 ValueType::GetHashCode()
    int GetHashCode();
  }; // System.Diagnostics.Tracing.EventDescriptor
}
DEFINE_IL2CPP_ARG_TYPE(System::Diagnostics::Tracing::EventDescriptor, "System.Diagnostics.Tracing", "EventDescriptor");
#pragma pack(pop)
