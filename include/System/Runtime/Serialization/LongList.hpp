// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:35 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System.Runtime.Serialization
namespace System::Runtime::Serialization {
  // Autogenerated type: System.Runtime.Serialization.LongList
  class LongList : public ::Il2CppObject {
    public:
    // private System.Int64[] m_values
    // Offset: 0x10
    ::Array<int64_t>* m_values;
    // private System.Int32 m_count
    // Offset: 0x18
    int m_count;
    // private System.Int32 m_totalItems
    // Offset: 0x1C
    int m_totalItems;
    // private System.Int32 m_currentItem
    // Offset: 0x20
    int m_currentItem;
    // System.Void .ctor(System.Int32 startingSize)
    // Offset: 0xFE25D4
    static LongList* New_ctor(int startingSize);
    // System.Void Add(System.Int64 value)
    // Offset: 0xFE2650
    void Add(int64_t value);
    // System.Int32 get_Count()
    // Offset: 0xFE2780
    int get_Count();
    // System.Void StartEnumeration()
    // Offset: 0xFE2788
    void StartEnumeration();
    // System.Boolean MoveNext()
    // Offset: 0xFE2794
    bool MoveNext();
    // System.Int64 get_Current()
    // Offset: 0xFE27FC
    int64_t get_Current();
    // System.Boolean RemoveElement(System.Int64 value)
    // Offset: 0xFE283C
    bool RemoveElement(int64_t value);
    // private System.Void EnlargeArray()
    // Offset: 0xFE26DC
    void EnlargeArray();
    // System.Void .ctor()
    // Offset: 0xFE25CC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static LongList* New_ctor();
  }; // System.Runtime.Serialization.LongList
}
DEFINE_IL2CPP_ARG_TYPE(System::Runtime::Serialization::LongList*, "System.Runtime.Serialization", "LongList");
#pragma pack(pop)
