// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:32 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System.Globalization
namespace System::Globalization {
  // Autogenerated type: System.Globalization.FORMATFLAGS
  struct FORMATFLAGS : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public System.Globalization.FORMATFLAGS None
    static constexpr const int None = 0;
    // Get static field: static public System.Globalization.FORMATFLAGS None
    static System::Globalization::FORMATFLAGS _get_None();
    // Set static field: static public System.Globalization.FORMATFLAGS None
    static void _set_None(System::Globalization::FORMATFLAGS value);
    // static field const value: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
    static constexpr const int UseGenitiveMonth = 1;
    // Get static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
    static System::Globalization::FORMATFLAGS _get_UseGenitiveMonth();
    // Set static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
    static void _set_UseGenitiveMonth(System::Globalization::FORMATFLAGS value);
    // static field const value: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
    static constexpr const int UseLeapYearMonth = 2;
    // Get static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
    static System::Globalization::FORMATFLAGS _get_UseLeapYearMonth();
    // Set static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
    static void _set_UseLeapYearMonth(System::Globalization::FORMATFLAGS value);
    // static field const value: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
    static constexpr const int UseSpacesInMonthNames = 4;
    // Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
    static System::Globalization::FORMATFLAGS _get_UseSpacesInMonthNames();
    // Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
    static void _set_UseSpacesInMonthNames(System::Globalization::FORMATFLAGS value);
    // static field const value: static public System.Globalization.FORMATFLAGS UseHebrewParsing
    static constexpr const int UseHebrewParsing = 8;
    // Get static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
    static System::Globalization::FORMATFLAGS _get_UseHebrewParsing();
    // Set static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
    static void _set_UseHebrewParsing(System::Globalization::FORMATFLAGS value);
    // static field const value: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
    static constexpr const int UseSpacesInDayNames = 16;
    // Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
    static System::Globalization::FORMATFLAGS _get_UseSpacesInDayNames();
    // Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
    static void _set_UseSpacesInDayNames(System::Globalization::FORMATFLAGS value);
    // static field const value: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
    static constexpr const int UseDigitPrefixInTokens = 32;
    // Get static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
    static System::Globalization::FORMATFLAGS _get_UseDigitPrefixInTokens();
    // Set static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
    static void _set_UseDigitPrefixInTokens(System::Globalization::FORMATFLAGS value);
    // Creating value type constructor for type: FORMATFLAGS
    FORMATFLAGS(int value_ = {}) : value{value_} {}
  }; // System.Globalization.FORMATFLAGS
}
DEFINE_IL2CPP_ARG_TYPE(System::Globalization::FORMATFLAGS, "System.Globalization", "FORMATFLAGS");
#pragma pack(pop)
