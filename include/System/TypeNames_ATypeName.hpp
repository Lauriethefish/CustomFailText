// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:28 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: System.TypeNames
#include "System/TypeNames.hpp"
// Including type: System.TypeName
#include "System/TypeName.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.TypeNames/ATypeName
  class TypeNames::ATypeName : public ::Il2CppObject, public System::TypeName, public System::IEquatable_1<System::TypeName*> {
    public:
    // public System.String get_DisplayName()
    // Offset: 0xFFFFFFFF
    // Implemented from: System.TypeName
    // Base method: System.String TypeName::get_DisplayName()
    ::Il2CppString* get_DisplayName();
    // public System.Boolean Equals(System.TypeName other)
    // Offset: 0x178127C
    // Implemented from: System.IEquatable`1
    // Base method: System.Boolean IEquatable`1::Equals(System.TypeName other)
    bool Equals(System::TypeName* other);
    // public override System.Int32 GetHashCode()
    // Offset: 0x1781368
    // Implemented from: System.Object
    // Base method: System.Int32 Object::GetHashCode()
    int GetHashCode();
    // public override System.Boolean Equals(System.Object other)
    // Offset: 0x1781394
    // Implemented from: System.Object
    // Base method: System.Boolean Object::Equals(System.Object other)
    bool Equals(::Il2CppObject* other);
    // protected System.Void .ctor()
    // Offset: 0x177FF80
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static TypeNames::ATypeName* New_ctor();
  }; // System.TypeNames/ATypeName
}
DEFINE_IL2CPP_ARG_TYPE(System::TypeNames::ATypeName*, "System", "TypeNames/ATypeName");
#pragma pack(pop)
