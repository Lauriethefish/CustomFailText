// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:33 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System.Threading
namespace System::Threading {
  // Autogenerated type: System.Threading.LazyThreadSafetyMode
  struct LazyThreadSafetyMode : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public System.Threading.LazyThreadSafetyMode None
    static constexpr const int None = 0;
    // Get static field: static public System.Threading.LazyThreadSafetyMode None
    static System::Threading::LazyThreadSafetyMode _get_None();
    // Set static field: static public System.Threading.LazyThreadSafetyMode None
    static void _set_None(System::Threading::LazyThreadSafetyMode value);
    // static field const value: static public System.Threading.LazyThreadSafetyMode PublicationOnly
    static constexpr const int PublicationOnly = 1;
    // Get static field: static public System.Threading.LazyThreadSafetyMode PublicationOnly
    static System::Threading::LazyThreadSafetyMode _get_PublicationOnly();
    // Set static field: static public System.Threading.LazyThreadSafetyMode PublicationOnly
    static void _set_PublicationOnly(System::Threading::LazyThreadSafetyMode value);
    // static field const value: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
    static constexpr const int ExecutionAndPublication = 2;
    // Get static field: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
    static System::Threading::LazyThreadSafetyMode _get_ExecutionAndPublication();
    // Set static field: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
    static void _set_ExecutionAndPublication(System::Threading::LazyThreadSafetyMode value);
    // Creating value type constructor for type: LazyThreadSafetyMode
    LazyThreadSafetyMode(int value_ = {}) : value{value_} {}
  }; // System.Threading.LazyThreadSafetyMode
}
DEFINE_IL2CPP_ARG_TYPE(System::Threading::LazyThreadSafetyMode, "System.Threading", "LazyThreadSafetyMode");
#pragma pack(pop)
