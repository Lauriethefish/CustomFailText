// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:33 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.IllogicalCallContext
#include "System/Runtime/Remoting/Messaging/IllogicalCallContext.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: SynchronizationContext
  class SynchronizationContext;
  // Forward declaring type: IAsyncLocal
  class IAsyncLocal;
}
// Completed forward declares
// Type namespace: System.Threading
namespace System::Threading {
  // Autogenerated type: System.Threading.ExecutionContext/Reader
  struct ExecutionContext::Reader : public System::ValueType {
    public:
    // private System.Threading.ExecutionContext m_ec
    // Offset: 0x0
    System::Threading::ExecutionContext* m_ec;
    // Creating value type constructor for type: Reader
    Reader(System::Threading::ExecutionContext* m_ec_ = {}) : m_ec{m_ec_} {}
    // public System.Void .ctor(System.Threading.ExecutionContext ec)
    // Offset: 0xA44138
    static ExecutionContext::Reader* New_ctor(System::Threading::ExecutionContext* ec);
    // public System.Threading.ExecutionContext DangerousGetRawExecutionContext()
    // Offset: 0xA44140
    System::Threading::ExecutionContext* DangerousGetRawExecutionContext();
    // public System.Boolean get_IsNull()
    // Offset: 0xA44148
    bool get_IsNull();
    // public System.Boolean IsDefaultFTContext(System.Boolean ignoreSyncCtx)
    // Offset: 0xA44158
    bool IsDefaultFTContext(bool ignoreSyncCtx);
    // public System.Boolean get_IsFlowSuppressed()
    // Offset: 0xA44174
    bool get_IsFlowSuppressed();
    // public System.Threading.SynchronizationContext get_SynchronizationContext()
    // Offset: 0xA44190
    System::Threading::SynchronizationContext* get_SynchronizationContext();
    // public System.Threading.SynchronizationContext get_SynchronizationContextNoFlow()
    // Offset: 0xA441A8
    System::Threading::SynchronizationContext* get_SynchronizationContextNoFlow();
    // public System.Runtime.Remoting.Messaging.LogicalCallContext/Reader get_LogicalCallContext()
    // Offset: 0xA441C0
    System::Runtime::Remoting::Messaging::LogicalCallContext::Reader get_LogicalCallContext();
    // public System.Runtime.Remoting.Messaging.IllogicalCallContext/Reader get_IllogicalCallContext()
    // Offset: 0xA441C8
    System::Runtime::Remoting::Messaging::IllogicalCallContext::Reader get_IllogicalCallContext();
    // public System.Object GetLocalValue(System.Threading.IAsyncLocal local)
    // Offset: 0xA441D0
    ::Il2CppObject* GetLocalValue(System::Threading::IAsyncLocal* local);
    // public System.Boolean HasSameLocalValues(System.Threading.ExecutionContext other)
    // Offset: 0xA441D8
    bool HasSameLocalValues(System::Threading::ExecutionContext* other);
  }; // System.Threading.ExecutionContext/Reader
}
DEFINE_IL2CPP_ARG_TYPE(System::Threading::ExecutionContext::Reader, "System.Threading", "ExecutionContext/Reader");
#pragma pack(pop)
