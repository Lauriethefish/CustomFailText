// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:41 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System.Collections.Generic
namespace System::Collections::Generic {
  // Autogenerated type: System.Collections.Generic.EqualityComparer`1
  template<typename T>
  class EqualityComparer_1 : public ::Il2CppObject, public System::Collections::IEqualityComparer, public System::Collections::Generic::IEqualityComparer_1<T> {
    public:
    // Autogenerated static field getter
    // Get static field: static private System.Collections.Generic.EqualityComparer`1<T> defaultComparer
    static System::Collections::Generic::EqualityComparer_1<T>* _get_defaultComparer() {
      return CRASH_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::EqualityComparer_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EqualityComparer_1<T>*>::get(), "defaultComparer")));
    }
    // Autogenerated static field setter
    // Set static field: static private System.Collections.Generic.EqualityComparer`1<T> defaultComparer
    static void _set_defaultComparer(System::Collections::Generic::EqualityComparer_1<T>* value) {
      CRASH_UNLESS(il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EqualityComparer_1<T>*>::get(), "defaultComparer", value));
    }
    // static public System.Collections.Generic.EqualityComparer`1<T> get_Default()
    // Offset: 0x16DFC80
    static System::Collections::Generic::EqualityComparer_1<T>* get_Default() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::EqualityComparer_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EqualityComparer_1<T>*>::get(), "get_Default"));
    }
    // static private System.Collections.Generic.EqualityComparer`1<T> CreateComparer()
    // Offset: 0x16DFD6C
    static System::Collections::Generic::EqualityComparer_1<T>* CreateComparer() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::EqualityComparer_1<T>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EqualityComparer_1<T>*>::get(), "CreateComparer"));
    }
    // System.Int32 IndexOf(T[] array, T value, System.Int32 startIndex, System.Int32 count)
    // Offset: 0x16E03A4
    int IndexOf(::Array<T>* array, T value, int startIndex, int count) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "IndexOf", array, value, startIndex, count));
    }
    // System.Int32 LastIndexOf(T[] array, T value, System.Int32 startIndex, System.Int32 count)
    // Offset: 0x16E049C
    int LastIndexOf(::Array<T>* array, T value, int startIndex, int count) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "LastIndexOf", array, value, startIndex, count));
    }
    // public System.Boolean Equals(T x, T y)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.Generic.IEqualityComparer`1
    // Base method: System.Boolean IEqualityComparer`1::Equals(T x, T y)
    bool Equals(T x, T y) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", x, y));
    }
    // public System.Int32 GetHashCode(T obj)
    // Offset: 0xFFFFFFFF
    // Implemented from: System.Collections.Generic.IEqualityComparer`1
    // Base method: System.Int32 IEqualityComparer`1::GetHashCode(T obj)
    int GetHashCode(T obj) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode", obj));
    }
    // private System.Int32 System.Collections.IEqualityComparer.GetHashCode(System.Object obj)
    // Offset: 0x16E058C
    // Implemented from: System.Collections.IEqualityComparer
    // Base method: System.Int32 IEqualityComparer::GetHashCode(System.Object obj)
    int System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "System.Collections.IEqualityComparer.GetHashCode", obj));
    }
    // private System.Boolean System.Collections.IEqualityComparer.Equals(System.Object x, System.Object y)
    // Offset: 0x16E0684
    // Implemented from: System.Collections.IEqualityComparer
    // Base method: System.Boolean IEqualityComparer::Equals(System.Object x, System.Object y)
    bool System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<bool>(this, "System.Collections.IEqualityComparer.Equals", x, y));
    }
    // protected System.Void .ctor()
    // Offset: 0x16E0834
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static EqualityComparer_1<T>* New_ctor() {
      return (EqualityComparer_1<T>*)CRASH_UNLESS(il2cpp_utils::New(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<EqualityComparer_1<T>*>::get()));
    }
  }; // System.Collections.Generic.EqualityComparer`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(System::Collections::Generic::EqualityComparer_1, "System.Collections.Generic", "EqualityComparer`1");
#pragma pack(pop)
