// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:41 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System.Collections.Concurrent
namespace System::Collections::Concurrent {
  // Autogenerated type: System.Collections.Concurrent.CDSCollectionETWBCLProvider
  class CDSCollectionETWBCLProvider : public System::Diagnostics::Tracing::EventSource {
    public:
    // Get static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
    static System::Collections::Concurrent::CDSCollectionETWBCLProvider* _get_Log();
    // Set static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
    static void _set_Log(System::Collections::Concurrent::CDSCollectionETWBCLProvider* value);
    // public System.Void ConcurrentDictionary_AcquiringAllLocks(System.Int32 numOfBuckets)
    // Offset: 0x131F3D0
    void ConcurrentDictionary_AcquiringAllLocks(int numOfBuckets);
    // private System.Void .ctor()
    // Offset: 0x131F368
    // Implemented from: System.Diagnostics.Tracing.EventSource
    // Base method: System.Void EventSource::.ctor()
    // Base method: System.Void Object::.ctor()
    static CDSCollectionETWBCLProvider* New_ctor();
    // static private System.Void .cctor()
    // Offset: 0x131F420
    // Implemented from: System.Diagnostics.Tracing.EventSource
    // Base method: System.Void EventSource::.cctor()
    static void _cctor();
  }; // System.Collections.Concurrent.CDSCollectionETWBCLProvider
}
DEFINE_IL2CPP_ARG_TYPE(System::Collections::Concurrent::CDSCollectionETWBCLProvider*, "System.Collections.Concurrent", "CDSCollectionETWBCLProvider");
#pragma pack(pop)
