// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:25 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
// Including type: System.DateTimeParse
#include "System/DateTimeParse.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System
namespace System {
  // Autogenerated type: System.DateTimeParse/TM
  struct DateTimeParse::TM : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public System.DateTimeParse/TM NotSet
    static constexpr const int NotSet = -1;
    // Get static field: static public System.DateTimeParse/TM NotSet
    static System::DateTimeParse::TM _get_NotSet();
    // Set static field: static public System.DateTimeParse/TM NotSet
    static void _set_NotSet(System::DateTimeParse::TM value);
    // static field const value: static public System.DateTimeParse/TM AM
    static constexpr const int AM = 0;
    // Get static field: static public System.DateTimeParse/TM AM
    static System::DateTimeParse::TM _get_AM();
    // Set static field: static public System.DateTimeParse/TM AM
    static void _set_AM(System::DateTimeParse::TM value);
    // static field const value: static public System.DateTimeParse/TM PM
    static constexpr const int PM = 1;
    // Get static field: static public System.DateTimeParse/TM PM
    static System::DateTimeParse::TM _get_PM();
    // Set static field: static public System.DateTimeParse/TM PM
    static void _set_PM(System::DateTimeParse::TM value);
    // Creating value type constructor for type: TM
    TM(int value_ = {}) : value{value_} {}
  }; // System.DateTimeParse/TM
}
DEFINE_IL2CPP_ARG_TYPE(System::DateTimeParse::TM, "System", "DateTimeParse/TM");
#pragma pack(pop)
