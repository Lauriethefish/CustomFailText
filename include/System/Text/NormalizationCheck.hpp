// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:29 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: System.Text
namespace System::Text {
  // Autogenerated type: System.Text.NormalizationCheck
  struct NormalizationCheck : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public System.Text.NormalizationCheck Yes
    static constexpr const int Yes = 0;
    // Get static field: static public System.Text.NormalizationCheck Yes
    static System::Text::NormalizationCheck _get_Yes();
    // Set static field: static public System.Text.NormalizationCheck Yes
    static void _set_Yes(System::Text::NormalizationCheck value);
    // static field const value: static public System.Text.NormalizationCheck No
    static constexpr const int No = 1;
    // Get static field: static public System.Text.NormalizationCheck No
    static System::Text::NormalizationCheck _get_No();
    // Set static field: static public System.Text.NormalizationCheck No
    static void _set_No(System::Text::NormalizationCheck value);
    // static field const value: static public System.Text.NormalizationCheck Maybe
    static constexpr const int Maybe = 2;
    // Get static field: static public System.Text.NormalizationCheck Maybe
    static System::Text::NormalizationCheck _get_Maybe();
    // Set static field: static public System.Text.NormalizationCheck Maybe
    static void _set_Maybe(System::Text::NormalizationCheck value);
    // Creating value type constructor for type: NormalizationCheck
    NormalizationCheck(int value_ = {}) : value{value_} {}
  }; // System.Text.NormalizationCheck
}
DEFINE_IL2CPP_ARG_TYPE(System::Text::NormalizationCheck, "System.Text", "NormalizationCheck");
#pragma pack(pop)
