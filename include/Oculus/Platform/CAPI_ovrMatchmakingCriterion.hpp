// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:00 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: Oculus.Platform.CAPI
#include "Oculus/Platform/CAPI.hpp"
// Including type: Oculus.Platform.MatchmakingCriterionImportance
#include "Oculus/Platform/MatchmakingCriterionImportance.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: Oculus.Platform
namespace Oculus::Platform {
  // Autogenerated type: Oculus.Platform.CAPI/ovrMatchmakingCriterion
  struct CAPI::ovrMatchmakingCriterion : public System::ValueType {
    public:
    // public System.String key_
    // Offset: 0x0
    ::Il2CppString* key;
    // public Oculus.Platform.MatchmakingCriterionImportance importance_
    // Offset: 0x8
    Oculus::Platform::MatchmakingCriterionImportance importance;
    // public System.IntPtr parameterArray
    // Offset: 0x10
    System::IntPtr parameterArray;
    // public System.UInt32 parameterArrayCount
    // Offset: 0x18
    uint parameterArrayCount;
    // Creating value type constructor for type: ovrMatchmakingCriterion
    ovrMatchmakingCriterion(::Il2CppString* key_ = {}, Oculus::Platform::MatchmakingCriterionImportance importance_ = {}, System::IntPtr parameterArray_ = {}, uint parameterArrayCount_ = {}) : key{key_}, importance{importance_}, parameterArray{parameterArray_}, parameterArrayCount{parameterArrayCount_} {}
    // public System.Void .ctor(System.String key, Oculus.Platform.MatchmakingCriterionImportance importance)
    // Offset: 0xA2FEF8
    static CAPI::ovrMatchmakingCriterion* New_ctor(::Il2CppString* key, Oculus::Platform::MatchmakingCriterionImportance importance);
  }; // Oculus.Platform.CAPI/ovrMatchmakingCriterion
}
DEFINE_IL2CPP_ARG_TYPE(Oculus::Platform::CAPI::ovrMatchmakingCriterion, "Oculus.Platform", "CAPI/ovrMatchmakingCriterion");
#pragma pack(pop)
