// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:02 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: PersistentScriptableObject
#include "GlobalNamespace/PersistentScriptableObject.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: SceneInfo
  class SceneInfo;
  // Forward declaring type: SceneSetupData
  class SceneSetupData;
}
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ScenesTransitionSetupDataSO
  class ScenesTransitionSetupDataSO : public GlobalNamespace::PersistentScriptableObject {
    public:
    // private SceneInfo[] <scenes>k__BackingField
    // Offset: 0x18
    ::Array<GlobalNamespace::SceneInfo*>* scenes;
    // private SceneSetupData[] <sceneSetupDataArray>k__BackingField
    // Offset: 0x20
    ::Array<GlobalNamespace::SceneSetupData*>* sceneSetupDataArray;
    // public SceneInfo[] get_scenes()
    // Offset: 0xCA60AC
    ::Array<GlobalNamespace::SceneInfo*>* get_scenes();
    // private System.Void set_scenes(SceneInfo[] value)
    // Offset: 0xCA60B4
    void set_scenes(::Array<GlobalNamespace::SceneInfo*>* value);
    // public SceneSetupData[] get_sceneSetupDataArray()
    // Offset: 0xCA60BC
    ::Array<GlobalNamespace::SceneSetupData*>* get_sceneSetupDataArray();
    // private System.Void set_sceneSetupDataArray(SceneSetupData[] value)
    // Offset: 0xCA60C4
    void set_sceneSetupDataArray(::Array<GlobalNamespace::SceneSetupData*>* value);
    // protected System.Void Init(SceneInfo[] scenes, SceneSetupData[] sceneSetupData)
    // Offset: 0xC9C088
    void Init(::Array<GlobalNamespace::SceneInfo*>* scenes, ::Array<GlobalNamespace::SceneSetupData*>* sceneSetupData);
    // public System.Void InstallBindings(Zenject.DiContainer container)
    // Offset: 0xC9EB84
    void InstallBindings(Zenject::DiContainer* container);
    // public T Get()
    // Offset: 0xC4ED1C
    template<class T>
    T Get() {
      static_assert(std::is_convertible_v<T, GlobalNamespace::SceneSetupData*>);
      return CRASH_UNLESS(il2cpp_utils::RunGenericMethod<T>(this, "Get", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
    }
    // protected System.Void .ctor()
    // Offset: 0xC9C0C4
    // Implemented from: PersistentScriptableObject
    // Base method: System.Void PersistentScriptableObject::.ctor()
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static ScenesTransitionSetupDataSO* New_ctor();
  }; // ScenesTransitionSetupDataSO
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ScenesTransitionSetupDataSO*, "", "ScenesTransitionSetupDataSO");
#pragma pack(pop)
