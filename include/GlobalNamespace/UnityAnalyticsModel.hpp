// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:06 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: UnityAnalyticsModel
  class UnityAnalyticsModel : public ::Il2CppObject, public GlobalNamespace::IAnalyticsModel {
    public:
    // Nested type: GlobalNamespace::UnityAnalyticsModel::$$c
    class $$c;
    // public System.Boolean get_supportsOpenDataPrivacyPage()
    // Offset: 0xC389E0
    // Implemented from: IAnalyticsModel
    // Base method: System.Boolean IAnalyticsModel::get_supportsOpenDataPrivacyPage()
    bool get_supportsOpenDataPrivacyPage();
    // public System.Void OpenDataPrivacyPage()
    // Offset: 0xC389E8
    // Implemented from: IAnalyticsModel
    // Base method: System.Void IAnalyticsModel::OpenDataPrivacyPage()
    void OpenDataPrivacyPage();
    // public System.Void LogEvent(System.String eventCategory, System.String eventAction, System.String eventLabel, System.Int64 value)
    // Offset: 0xC38AD0
    // Implemented from: IAnalyticsModel
    // Base method: System.Void IAnalyticsModel::LogEvent(System.String eventCategory, System.String eventAction, System.String eventLabel, System.Int64 value)
    void LogEvent(::Il2CppString* eventCategory, ::Il2CppString* eventAction, ::Il2CppString* eventLabel, int64_t value);
    // public System.Void .ctor()
    // Offset: 0xC38BE4
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static UnityAnalyticsModel* New_ctor();
  }; // UnityAnalyticsModel
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::UnityAnalyticsModel*, "", "UnityAnalyticsModel");
#pragma pack(pop)
