// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:02 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: RandomObjectPicker`1
  template<typename T>
  class RandomObjectPicker_1 : public ::Il2CppObject {
    public:
    // private T[] _objects
    // Offset: 0x0
    ::Array<T>* objects;
    // private System.Single _lastPickTime
    // Offset: 0x0
    float lastPickTime;
    // private System.Single _minimumPickInterval
    // Offset: 0x0
    float minimumPickInterval;
    // public System.Void .ctor(T obj, System.Single minimumPickInterval)
    // Offset: 0x1283814
    static RandomObjectPicker_1<T>* New_ctor(T obj, float minimumPickInterval) {
      return (RandomObjectPicker_1<T>*)CRASH_UNLESS(il2cpp_utils::New(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<RandomObjectPicker_1<T>*>::get(), obj, minimumPickInterval));
    }
    // public System.Void .ctor(T[] objects, System.Single minimumPickInterval)
    // Offset: 0x12838CC
    static RandomObjectPicker_1<T>* New_ctor(::Array<T>* objects, float minimumPickInterval) {
      return (RandomObjectPicker_1<T>*)CRASH_UNLESS(il2cpp_utils::New(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<RandomObjectPicker_1<T>*>::get(), objects, minimumPickInterval));
    }
    // public T PickRandomObject()
    // Offset: 0x1283970
    T PickRandomObject() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<T>(this, "PickRandomObject"));
    }
  }; // RandomObjectPicker`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(GlobalNamespace::RandomObjectPicker_1, "", "RandomObjectPicker`1");
#pragma pack(pop)
