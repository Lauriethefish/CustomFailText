// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:00 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: System.Boolean
#include "System/Boolean.hpp"
// Including type: System.Single
#include "System/Single.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AudioSource
  class AudioSource;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BufferedAudioStream
  class BufferedAudioStream : public ::Il2CppObject {
    public:
    // static field const value: static private System.Boolean VerboseLogging
    static constexpr const bool VerboseLogging = false;
    // Get static field: static private System.Boolean VerboseLogging
    static bool _get_VerboseLogging();
    // Set static field: static private System.Boolean VerboseLogging
    static void _set_VerboseLogging(bool value);
    // private UnityEngine.AudioSource audio
    // Offset: 0x10
    UnityEngine::AudioSource* audio;
    // private System.Single[] audioBuffer
    // Offset: 0x18
    ::Array<float>* audioBuffer;
    // private System.Int32 writePos
    // Offset: 0x20
    int writePos;
    // static field const value: static private System.Single bufferLengthSeconds
    static constexpr const float bufferLengthSeconds = 0.25;
    // Get static field: static private System.Single bufferLengthSeconds
    static float _get_bufferLengthSeconds();
    // Set static field: static private System.Single bufferLengthSeconds
    static void _set_bufferLengthSeconds(float value);
    // static field const value: static private System.Int32 sampleRate
    static constexpr const int sampleRate = 48000;
    // Get static field: static private System.Int32 sampleRate
    static int _get_sampleRate();
    // Set static field: static private System.Int32 sampleRate
    static void _set_sampleRate(int value);
    // static field const value: static private System.Int32 bufferSize
    static constexpr const int bufferSize = 12000;
    // Get static field: static private System.Int32 bufferSize
    static int _get_bufferSize();
    // Set static field: static private System.Int32 bufferSize
    static void _set_bufferSize(int value);
    // static field const value: static private System.Single playbackDelayTimeSeconds
    static constexpr const float playbackDelayTimeSeconds = 0.05;
    // Get static field: static private System.Single playbackDelayTimeSeconds
    static float _get_playbackDelayTimeSeconds();
    // Set static field: static private System.Single playbackDelayTimeSeconds
    static void _set_playbackDelayTimeSeconds(float value);
    // private System.Single playbackDelayRemaining
    // Offset: 0x24
    float playbackDelayRemaining;
    // private System.Single remainingBufferTime
    // Offset: 0x28
    float remainingBufferTime;
    // public System.Void .ctor(UnityEngine.AudioSource audio)
    // Offset: 0x157C320
    static BufferedAudioStream* New_ctor(UnityEngine::AudioSource* audio);
    // public System.Void Update()
    // Offset: 0x157C44C
    void Update();
    // private System.Void Stop()
    // Offset: 0x157C3FC
    void Stop();
    // public System.Void AddData(System.Single[] samples)
    // Offset: 0x157C624
    void AddData(::Array<float>* samples);
  }; // BufferedAudioStream
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BufferedAudioStream*, "", "BufferedAudioStream");
#pragma pack(pop)
