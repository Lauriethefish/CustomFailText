// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:08 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: IDestinationRequestManager
  class IDestinationRequestManager;
  // Forward declaring type: MenuScenesTransitionSetupDataSO
  class MenuScenesTransitionSetupDataSO;
  // Forward declaring type: GameScenesManager
  class GameScenesManager;
  // Forward declaring type: ScenesTransitionSetupDataSO
  class ScenesTransitionSetupDataSO;
  // Forward declaring type: MenuDestination
  class MenuDestination;
}
// Forward declaring namespace: System::Threading
namespace System::Threading {
  // Forward declaring type: CancellationTokenSource
  class CancellationTokenSource;
}
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: MainMenuDestinationRequestControler
  class MainMenuDestinationRequestControler : public ::Il2CppObject, public Zenject::IInitializable, public System::IDisposable {
    public:
    // Nested type: GlobalNamespace::MainMenuDestinationRequestControler::$ProcessDestinationRequest$d__8
    struct $ProcessDestinationRequest$d__8;
    // private IDestinationRequestManager _destinationRequestManager
    // Offset: 0x10
    GlobalNamespace::IDestinationRequestManager* destinationRequestManager;
    // private MenuScenesTransitionSetupDataSO _menuScenesTransitionSetupData
    // Offset: 0x18
    GlobalNamespace::MenuScenesTransitionSetupDataSO* menuScenesTransitionSetupData;
    // private GameScenesManager _gameScenesManager
    // Offset: 0x20
    GlobalNamespace::GameScenesManager* gameScenesManager;
    // private System.Threading.CancellationTokenSource _cancellationTokenSource
    // Offset: 0x28
    System::Threading::CancellationTokenSource* cancellationTokenSource;
    // private System.Void HandleGameScenesManagerInstallEarlyBindings(ScenesTransitionSetupDataSO scenesTransitionSetupData, Zenject.DiContainer container)
    // Offset: 0xBEA3AC
    void HandleGameScenesManagerInstallEarlyBindings(GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, Zenject::DiContainer* container);
    // private System.Void HandleDestinationRequestManagerDidSendMenuDestinationRequest(MenuDestination menuDestination)
    // Offset: 0xBEA63C
    void HandleDestinationRequestManagerDidSendMenuDestinationRequest(GlobalNamespace::MenuDestination* menuDestination);
    // private System.Void ProcessDestinationRequest(MenuDestination menuDestination)
    // Offset: 0xBEA138
    void ProcessDestinationRequest(GlobalNamespace::MenuDestination* menuDestination);
    // public System.Void Initialize()
    // Offset: 0xBE9F54
    // Implemented from: Zenject.IInitializable
    // Base method: System.Void IInitializable::Initialize()
    void Initialize();
    // public System.Void Dispose()
    // Offset: 0xBEA214
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose();
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose();
    // public System.Void .ctor()
    // Offset: 0xBEA640
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static MainMenuDestinationRequestControler* New_ctor();
  }; // MainMenuDestinationRequestControler
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::MainMenuDestinationRequestControler*, "", "MainMenuDestinationRequestControler");
#pragma pack(pop)
