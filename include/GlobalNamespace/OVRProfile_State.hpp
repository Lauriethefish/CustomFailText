// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:51 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
// Including type: OVRProfile
#include "GlobalNamespace/OVRProfile.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRProfile/State
  struct OVRProfile::State : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public OVRProfile/State NOT_TRIGGERED
    static constexpr const int NOT_TRIGGERED = 0;
    // Get static field: static public OVRProfile/State NOT_TRIGGERED
    static GlobalNamespace::OVRProfile::State _get_NOT_TRIGGERED();
    // Set static field: static public OVRProfile/State NOT_TRIGGERED
    static void _set_NOT_TRIGGERED(GlobalNamespace::OVRProfile::State value);
    // static field const value: static public OVRProfile/State LOADING
    static constexpr const int LOADING = 1;
    // Get static field: static public OVRProfile/State LOADING
    static GlobalNamespace::OVRProfile::State _get_LOADING();
    // Set static field: static public OVRProfile/State LOADING
    static void _set_LOADING(GlobalNamespace::OVRProfile::State value);
    // static field const value: static public OVRProfile/State READY
    static constexpr const int READY = 2;
    // Get static field: static public OVRProfile/State READY
    static GlobalNamespace::OVRProfile::State _get_READY();
    // Set static field: static public OVRProfile/State READY
    static void _set_READY(GlobalNamespace::OVRProfile::State value);
    // static field const value: static public OVRProfile/State ERROR
    static constexpr const int ERROR = 3;
    // Get static field: static public OVRProfile/State ERROR
    static GlobalNamespace::OVRProfile::State _get_ERROR();
    // Set static field: static public OVRProfile/State ERROR
    static void _set_ERROR(GlobalNamespace::OVRProfile::State value);
    // Creating value type constructor for type: State
    State(int value_ = {}) : value{value_} {}
  }; // OVRProfile/State
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRProfile::State, "", "OVRProfile/State");
#pragma pack(pop)
