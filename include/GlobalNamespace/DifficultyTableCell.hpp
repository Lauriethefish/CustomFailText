// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:17 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: TMPro
namespace TMPro {
  // Forward declaring type: TextMeshProUGUI
  class TextMeshProUGUI;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Image
  class Image;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: FillIndicator
  class FillIndicator;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: DifficultyTableCell
  class DifficultyTableCell : public HMUI::TableCell {
    public:
    // private TMPro.TextMeshProUGUI _difficultyText
    // Offset: 0x50
    TMPro::TextMeshProUGUI* difficultyText;
    // private UnityEngine.UI.Image _bgImage
    // Offset: 0x58
    UnityEngine::UI::Image* bgImage;
    // private UnityEngine.UI.Image _highlightImage
    // Offset: 0x60
    UnityEngine::UI::Image* highlightImage;
    // private FillIndicator _fillIndicator
    // Offset: 0x68
    GlobalNamespace::FillIndicator* fillIndicator;
    // public System.Void set_difficultyText(System.String value)
    // Offset: 0xBD1AC0
    void set_difficultyText(::Il2CppString* value);
    // public System.String get_difficultyText()
    // Offset: 0xBD1ADC
    ::Il2CppString* get_difficultyText();
    // public System.Void set_difficultyValue(System.Int32 value)
    // Offset: 0xBD1AF8
    void set_difficultyValue(int value);
    // protected override System.Void SelectionDidChange(HMUI.TableCell/TransitionType transitionType)
    // Offset: 0xBD1BE0
    // Implemented from: HMUI.TableCell
    // Base method: System.Void TableCell::SelectionDidChange(HMUI.TableCell/TransitionType transitionType)
    void SelectionDidChange(HMUI::TableCell::TransitionType transitionType);
    // protected override System.Void HighlightDidChange(HMUI.TableCell/TransitionType transitionType)
    // Offset: 0xBD1C78
    // Implemented from: HMUI.TableCell
    // Base method: System.Void TableCell::HighlightDidChange(HMUI.TableCell/TransitionType transitionType)
    void HighlightDidChange(HMUI::TableCell::TransitionType transitionType);
    // public System.Void .ctor()
    // Offset: 0xBD1CB4
    // Implemented from: HMUI.TableCell
    // Base method: System.Void TableCell::.ctor()
    // Base method: System.Void Interactable::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static DifficultyTableCell* New_ctor();
  }; // DifficultyTableCell
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::DifficultyTableCell*, "", "DifficultyTableCell");
#pragma pack(pop)
