// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:11 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Skipping declaration: Platform because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: PlatformInfo
  class PlatformInfo : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::PlatformInfo::Platform
    struct Platform;
    // Autogenerated type: PlatformInfo/Platform
    struct Platform : public System::Enum {
      public:
      // public System.Byte value__
      // Offset: 0x0
      uint8_t value;
      // static field const value: static public PlatformInfo/Platform Test
      static constexpr const uint8_t Test = 0u;
      // Get static field: static public PlatformInfo/Platform Test
      static GlobalNamespace::PlatformInfo::Platform _get_Test();
      // Set static field: static public PlatformInfo/Platform Test
      static void _set_Test(GlobalNamespace::PlatformInfo::Platform value);
      // static field const value: static public PlatformInfo/Platform Steam
      static constexpr const uint8_t Steam = 1u;
      // Get static field: static public PlatformInfo/Platform Steam
      static GlobalNamespace::PlatformInfo::Platform _get_Steam();
      // Set static field: static public PlatformInfo/Platform Steam
      static void _set_Steam(GlobalNamespace::PlatformInfo::Platform value);
      // static field const value: static public PlatformInfo/Platform Oculus
      static constexpr const uint8_t Oculus = 2u;
      // Get static field: static public PlatformInfo/Platform Oculus
      static GlobalNamespace::PlatformInfo::Platform _get_Oculus();
      // Set static field: static public PlatformInfo/Platform Oculus
      static void _set_Oculus(GlobalNamespace::PlatformInfo::Platform value);
      // static field const value: static public PlatformInfo/Platform PS4
      static constexpr const uint8_t PS4 = 3u;
      // Get static field: static public PlatformInfo/Platform PS4
      static GlobalNamespace::PlatformInfo::Platform _get_PS4();
      // Set static field: static public PlatformInfo/Platform PS4
      static void _set_PS4(GlobalNamespace::PlatformInfo::Platform value);
      // Creating value type constructor for type: Platform
      Platform(uint8_t value_ = {}) : value{value_} {}
    }; // PlatformInfo/Platform
    // public readonly PlatformInfo/Platform platform
    // Offset: 0x10
    GlobalNamespace::PlatformInfo::Platform platform;
    // public readonly System.String serialzedName
    // Offset: 0x18
    ::Il2CppString* serialzedName;
    // Get static field: static public readonly PlatformInfo testPlatformInfo
    static GlobalNamespace::PlatformInfo* _get_testPlatformInfo();
    // Set static field: static public readonly PlatformInfo testPlatformInfo
    static void _set_testPlatformInfo(GlobalNamespace::PlatformInfo* value);
    // Get static field: static public readonly PlatformInfo steamPlatformInfo
    static GlobalNamespace::PlatformInfo* _get_steamPlatformInfo();
    // Set static field: static public readonly PlatformInfo steamPlatformInfo
    static void _set_steamPlatformInfo(GlobalNamespace::PlatformInfo* value);
    // Get static field: static public readonly PlatformInfo oculusPlatformInfo
    static GlobalNamespace::PlatformInfo* _get_oculusPlatformInfo();
    // Set static field: static public readonly PlatformInfo oculusPlatformInfo
    static void _set_oculusPlatformInfo(GlobalNamespace::PlatformInfo* value);
    // Get static field: static public readonly PlatformInfo ps4PlatformInfo
    static GlobalNamespace::PlatformInfo* _get_ps4PlatformInfo();
    // Set static field: static public readonly PlatformInfo ps4PlatformInfo
    static void _set_ps4PlatformInfo(GlobalNamespace::PlatformInfo* value);
    // private System.Void .ctor(PlatformInfo/Platform platform, System.String serialzedName)
    // Offset: 0xBC05C0
    static PlatformInfo* New_ctor(GlobalNamespace::PlatformInfo::Platform platform, ::Il2CppString* serialzedName);
    // static private System.Void .cctor()
    // Offset: 0xBC0604
    static void _cctor();
  }; // PlatformInfo
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::PlatformInfo*, "", "PlatformInfo");
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::PlatformInfo::Platform, "", "PlatformInfo/Platform");
#pragma pack(pop)
