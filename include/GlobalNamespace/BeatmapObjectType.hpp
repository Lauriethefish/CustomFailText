// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:09 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BeatmapObjectType
  struct BeatmapObjectType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public BeatmapObjectType Note
    static constexpr const int Note = 0;
    // Get static field: static public BeatmapObjectType Note
    static GlobalNamespace::BeatmapObjectType _get_Note();
    // Set static field: static public BeatmapObjectType Note
    static void _set_Note(GlobalNamespace::BeatmapObjectType value);
    // static field const value: static public BeatmapObjectType LongNote
    static constexpr const int LongNote = 1;
    // Get static field: static public BeatmapObjectType LongNote
    static GlobalNamespace::BeatmapObjectType _get_LongNote();
    // Set static field: static public BeatmapObjectType LongNote
    static void _set_LongNote(GlobalNamespace::BeatmapObjectType value);
    // static field const value: static public BeatmapObjectType Obstacle
    static constexpr const int Obstacle = 2;
    // Get static field: static public BeatmapObjectType Obstacle
    static GlobalNamespace::BeatmapObjectType _get_Obstacle();
    // Set static field: static public BeatmapObjectType Obstacle
    static void _set_Obstacle(GlobalNamespace::BeatmapObjectType value);
    // Creating value type constructor for type: BeatmapObjectType
    BeatmapObjectType(int value_ = {}) : value{value_} {}
  }; // BeatmapObjectType
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapObjectType, "", "BeatmapObjectType");
#pragma pack(pop)
