// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:04 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Polyglot
namespace Polyglot {
  // Forward declaring type: Localization
  class Localization;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: LocalizationProvider
  class LocalizationProvider : public UnityEngine::ScriptableObject {
    public:
    // private Polyglot.Localization _localization
    // Offset: 0x18
    Polyglot::Localization* localization;
    // Get static field: static private LocalizationProvider _instance
    static GlobalNamespace::LocalizationProvider* _get__instance();
    // Set static field: static private LocalizationProvider _instance
    static void _set__instance(GlobalNamespace::LocalizationProvider* value);
    // public Polyglot.Localization get_localization()
    // Offset: 0x18FD068
    Polyglot::Localization* get_localization();
    // static public LocalizationProvider get_Instance()
    // Offset: 0x18FD070
    static GlobalNamespace::LocalizationProvider* get_Instance();
    // static public System.Void set_Instance(LocalizationProvider value)
    // Offset: 0x18FD1EC
    static void set_Instance(GlobalNamespace::LocalizationProvider* value);
    // static public System.Boolean get_HasInstance()
    // Offset: 0x18FD0FC
    static bool get_HasInstance();
    // public System.Void .ctor()
    // Offset: 0x18FD244
    // Implemented from: UnityEngine.ScriptableObject
    // Base method: System.Void ScriptableObject::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static LocalizationProvider* New_ctor();
  }; // LocalizationProvider
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LocalizationProvider*, "", "LocalizationProvider");
#pragma pack(pop)
