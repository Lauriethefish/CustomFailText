// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:47 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRNativeBuffer
  class OVRNativeBuffer;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRBoundary
  class OVRBoundary : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::OVRBoundary::Node
    struct Node;
    // Nested type: GlobalNamespace::OVRBoundary::BoundaryType
    struct BoundaryType;
    // Nested type: GlobalNamespace::OVRBoundary::BoundaryTestResult
    struct BoundaryTestResult;
    // Get static field: static private System.Int32 cachedVector3fSize
    static int _get_cachedVector3fSize();
    // Set static field: static private System.Int32 cachedVector3fSize
    static void _set_cachedVector3fSize(int value);
    // Get static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
    static GlobalNamespace::OVRNativeBuffer* _get_cachedGeometryNativeBuffer();
    // Set static field: static private OVRNativeBuffer cachedGeometryNativeBuffer
    static void _set_cachedGeometryNativeBuffer(GlobalNamespace::OVRNativeBuffer* value);
    // Get static field: static private System.Single[] cachedGeometryManagedBuffer
    static ::Array<float>* _get_cachedGeometryManagedBuffer();
    // Set static field: static private System.Single[] cachedGeometryManagedBuffer
    static void _set_cachedGeometryManagedBuffer(::Array<float>* value);
    // private System.Collections.Generic.List`1<UnityEngine.Vector3> cachedGeometryList
    // Offset: 0x10
    System::Collections::Generic::List_1<UnityEngine::Vector3>* cachedGeometryList;
    // public System.Boolean GetConfigured()
    // Offset: 0xCB1A2C
    bool GetConfigured();
    // public OVRBoundary/BoundaryTestResult TestNode(OVRBoundary/Node node, OVRBoundary/BoundaryType boundaryType)
    // Offset: 0xCB1AD0
    GlobalNamespace::OVRBoundary::BoundaryTestResult TestNode(GlobalNamespace::OVRBoundary::Node node, GlobalNamespace::OVRBoundary::BoundaryType boundaryType);
    // public OVRBoundary/BoundaryTestResult TestPoint(UnityEngine.Vector3 point, OVRBoundary/BoundaryType boundaryType)
    // Offset: 0xCB1BAC
    GlobalNamespace::OVRBoundary::BoundaryTestResult TestPoint(UnityEngine::Vector3 point, GlobalNamespace::OVRBoundary::BoundaryType boundaryType);
    // public UnityEngine.Vector3[] GetGeometry(OVRBoundary/BoundaryType boundaryType)
    // Offset: 0xCB1CAC
    ::Array<UnityEngine::Vector3>* GetGeometry(GlobalNamespace::OVRBoundary::BoundaryType boundaryType);
    // public UnityEngine.Vector3 GetDimensions(OVRBoundary/BoundaryType boundaryType)
    // Offset: 0xCB20CC
    UnityEngine::Vector3 GetDimensions(GlobalNamespace::OVRBoundary::BoundaryType boundaryType);
    // public System.Boolean GetVisible()
    // Offset: 0xCB21D0
    bool GetVisible();
    // public System.Void SetVisible(System.Boolean value)
    // Offset: 0xCB2274
    void SetVisible(bool value);
    // static private System.Void .cctor()
    // Offset: 0xCB23A0
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0xCB2324
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static OVRBoundary* New_ctor();
  }; // OVRBoundary
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRBoundary*, "", "OVRBoundary");
#pragma pack(pop)
