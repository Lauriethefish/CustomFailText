// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:51 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRPose
  struct OVRPose;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRTracker
  class OVRTracker : public ::Il2CppObject {
    public:
    // Nested type: GlobalNamespace::OVRTracker::Frustum
    struct Frustum;
    // public System.Boolean get_isPresent()
    // Offset: 0x18E6364
    bool get_isPresent();
    // public System.Boolean get_isPositionTracked()
    // Offset: 0x18E6400
    bool get_isPositionTracked();
    // public System.Boolean get_isEnabled()
    // Offset: 0x18E6460
    bool get_isEnabled();
    // public System.Void set_isEnabled(System.Boolean value)
    // Offset: 0x18E64FC
    void set_isEnabled(bool value);
    // public System.Int32 get_count()
    // Offset: 0x18E659C
    int get_count();
    // public OVRTracker/Frustum GetFrustum(System.Int32 tracker)
    // Offset: 0x18E6718
    GlobalNamespace::OVRTracker::Frustum GetFrustum(int tracker);
    // public OVRPose GetPose(System.Int32 tracker)
    // Offset: 0x18E67C8
    GlobalNamespace::OVRPose GetPose(int tracker);
    // public System.Boolean GetPoseValid(System.Int32 tracker)
    // Offset: 0x18E6A5C
    bool GetPoseValid(int tracker);
    // public System.Boolean GetPresent(System.Int32 tracker)
    // Offset: 0x18E65DC
    bool GetPresent(int tracker);
    // public System.Void .ctor()
    // Offset: 0x18E6B98
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static OVRTracker* New_ctor();
  }; // OVRTracker
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRTracker*, "", "OVRTracker");
#pragma pack(pop)
