// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:01 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: EnableEmmisionOnVisible
  class EnableEmmisionOnVisible : public UnityEngine::MonoBehaviour {
    public:
    // private UnityEngine.ParticleSystem[] _particleSystems
    // Offset: 0x18
    ::Array<UnityEngine::ParticleSystem*>* particleSystems;
    // private UnityEngine.ParticleSystem/EmissionModule[] _emmisionModules
    // Offset: 0x20
    ::Array<UnityEngine::ParticleSystem::EmissionModule>* emmisionModules;
    // protected System.Void Awake()
    // Offset: 0xC9A10C
    void Awake();
    // protected System.Void OnBecameVisible()
    // Offset: 0xC9A22C
    void OnBecameVisible();
    // protected System.Void OnBecameInvisible()
    // Offset: 0xC9A2B4
    void OnBecameInvisible();
    // public System.Void .ctor()
    // Offset: 0xC9A33C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static EnableEmmisionOnVisible* New_ctor();
  }; // EnableEmmisionOnVisible
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::EnableEmmisionOnVisible*, "", "EnableEmmisionOnVisible");
#pragma pack(pop)
