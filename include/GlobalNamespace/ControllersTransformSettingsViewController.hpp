// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:19 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Vector3SO
  class Vector3SO;
}
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: RangeValuesTextSlider
  class RangeValuesTextSlider;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: ControllersTransformSettingsViewController
  class ControllersTransformSettingsViewController : public HMUI::ViewController {
    public:
    // private Vector3SO _controllerPosition
    // Offset: 0x68
    GlobalNamespace::Vector3SO* controllerPosition;
    // private Vector3SO _controllerRotation
    // Offset: 0x70
    GlobalNamespace::Vector3SO* controllerRotation;
    // private HMUI.RangeValuesTextSlider _posXSlider
    // Offset: 0x78
    HMUI::RangeValuesTextSlider* posXSlider;
    // private HMUI.RangeValuesTextSlider _posYSlider
    // Offset: 0x80
    HMUI::RangeValuesTextSlider* posYSlider;
    // private HMUI.RangeValuesTextSlider _posZSlider
    // Offset: 0x88
    HMUI::RangeValuesTextSlider* posZSlider;
    // private HMUI.RangeValuesTextSlider _rotXSlider
    // Offset: 0x90
    HMUI::RangeValuesTextSlider* rotXSlider;
    // private HMUI.RangeValuesTextSlider _rotYSlider
    // Offset: 0x98
    HMUI::RangeValuesTextSlider* rotYSlider;
    // private HMUI.RangeValuesTextSlider _rotZSlider
    // Offset: 0xA0
    HMUI::RangeValuesTextSlider* rotZSlider;
    // static field const value: static private System.Single kPositionStep
    static constexpr const float kPositionStep = 0.1;
    // Get static field: static private System.Single kPositionStep
    static float _get_kPositionStep();
    // Set static field: static private System.Single kPositionStep
    static void _set_kPositionStep(float value);
    // static field const value: static private System.Single kPositionMul
    static constexpr const float kPositionMul = 100;
    // Get static field: static private System.Single kPositionMul
    static float _get_kPositionMul();
    // Set static field: static private System.Single kPositionMul
    static void _set_kPositionMul(float value);
    // static field const value: static private System.Single kRotationStep
    static constexpr const float kRotationStep = 1;
    // Get static field: static private System.Single kRotationStep
    static float _get_kRotationStep();
    // Set static field: static private System.Single kRotationStep
    static void _set_kRotationStep(float value);
    // private System.Void HandlePositionSliderValueDidChange(HMUI.RangeValuesTextSlider slider, System.Single value)
    // Offset: 0xBCD17C
    void HandlePositionSliderValueDidChange(HMUI::RangeValuesTextSlider* slider, float value);
    // private System.Void HandleRotationSliderValueDidChange(HMUI.RangeValuesTextSlider slider, System.Single value)
    // Offset: 0xBCD258
    void HandleRotationSliderValueDidChange(HMUI::RangeValuesTextSlider* slider, float value);
    // protected override System.Void DidActivate(System.Boolean firstActivation, HMUI.ViewController/ActivationType activationType)
    // Offset: 0xBCC9E0
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::DidActivate(System.Boolean firstActivation, HMUI.ViewController/ActivationType activationType)
    void DidActivate(bool firstActivation, HMUI::ViewController::ActivationType activationType);
    // protected override System.Void OnDestroy()
    // Offset: 0xBCCE50
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::OnDestroy()
    void OnDestroy();
    // public System.Void .ctor()
    // Offset: 0xBCD328
    // Implemented from: HMUI.ViewController
    // Base method: System.Void ViewController::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static ControllersTransformSettingsViewController* New_ctor();
  }; // ControllersTransformSettingsViewController
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::ControllersTransformSettingsViewController*, "", "ControllersTransformSettingsViewController");
#pragma pack(pop)
