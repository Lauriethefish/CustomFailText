// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:09 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: NoteType
  struct NoteType : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public NoteType NoteA
    static constexpr const int NoteA = 0;
    // Get static field: static public NoteType NoteA
    static GlobalNamespace::NoteType _get_NoteA();
    // Set static field: static public NoteType NoteA
    static void _set_NoteA(GlobalNamespace::NoteType value);
    // static field const value: static public NoteType NoteB
    static constexpr const int NoteB = 1;
    // Get static field: static public NoteType NoteB
    static GlobalNamespace::NoteType _get_NoteB();
    // Set static field: static public NoteType NoteB
    static void _set_NoteB(GlobalNamespace::NoteType value);
    // static field const value: static public NoteType GhostNote
    static constexpr const int GhostNote = 2;
    // Get static field: static public NoteType GhostNote
    static GlobalNamespace::NoteType _get_GhostNote();
    // Set static field: static public NoteType GhostNote
    static void _set_GhostNote(GlobalNamespace::NoteType value);
    // static field const value: static public NoteType Bomb
    static constexpr const int Bomb = 3;
    // Get static field: static public NoteType Bomb
    static GlobalNamespace::NoteType _get_Bomb();
    // Set static field: static public NoteType Bomb
    static void _set_Bomb(GlobalNamespace::NoteType value);
    // Creating value type constructor for type: NoteType
    NoteType(int value_ = {}) : value{value_} {}
  }; // NoteType
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::NoteType, "", "NoteType");
#pragma pack(pop)
