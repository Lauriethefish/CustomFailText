// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:47 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: OVRCameraRig
  class OVRCameraRig;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: OVRDebugHeadController
  class OVRDebugHeadController : public UnityEngine::MonoBehaviour {
    public:
    // public System.Boolean AllowPitchLook
    // Offset: 0x18
    bool AllowPitchLook;
    // public System.Boolean AllowYawLook
    // Offset: 0x19
    bool AllowYawLook;
    // public System.Boolean InvertPitch
    // Offset: 0x1A
    bool InvertPitch;
    // public System.Single GamePad_PitchDegreesPerSec
    // Offset: 0x1C
    float GamePad_PitchDegreesPerSec;
    // public System.Single GamePad_YawDegreesPerSec
    // Offset: 0x20
    float GamePad_YawDegreesPerSec;
    // public System.Boolean AllowMovement
    // Offset: 0x24
    bool AllowMovement;
    // public System.Single ForwardSpeed
    // Offset: 0x28
    float ForwardSpeed;
    // public System.Single StrafeSpeed
    // Offset: 0x2C
    float StrafeSpeed;
    // protected OVRCameraRig CameraRig
    // Offset: 0x30
    GlobalNamespace::OVRCameraRig* CameraRig;
    // private System.Void Awake()
    // Offset: 0xCB7364
    void Awake();
    // private System.Void Start()
    // Offset: 0xCB7460
    void Start();
    // private System.Void Update()
    // Offset: 0xCB7464
    void Update();
    // public System.Void .ctor()
    // Offset: 0xCB79F0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static OVRDebugHeadController* New_ctor();
  }; // OVRDebugHeadController
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::OVRDebugHeadController*, "", "OVRDebugHeadController");
#pragma pack(pop)
