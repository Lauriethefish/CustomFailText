// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:14 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: BeatmapEventType
#include "GlobalNamespace/BeatmapEventType.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: ColorSO
  class ColorSO;
  // Forward declaring type: BeatmapObjectCallbackController
  class BeatmapObjectCallbackController;
  // Forward declaring type: LightWithIdManager
  class LightWithIdManager;
  // Forward declaring type: BeatmapEventData
  class BeatmapEventData;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: LightSwitchEventEffect
  class LightSwitchEventEffect : public UnityEngine::MonoBehaviour {
    public:
    // private ColorSO _lightColor0
    // Offset: 0x18
    GlobalNamespace::ColorSO* lightColor0;
    // private ColorSO _lightColor1
    // Offset: 0x20
    GlobalNamespace::ColorSO* lightColor1;
    // private ColorSO _highlightColor0
    // Offset: 0x28
    GlobalNamespace::ColorSO* highlightColor0;
    // private ColorSO _highlightColor1
    // Offset: 0x30
    GlobalNamespace::ColorSO* highlightColor1;
    // private System.Single _offColorIntensity
    // Offset: 0x38
    float offColorIntensity;
    // private System.Boolean _lightOnStart
    // Offset: 0x3C
    bool lightOnStart;
    // private System.Int32 _lightsID
    // Offset: 0x40
    int lightsID;
    // private BeatmapEventType _event
    // Offset: 0x44
    GlobalNamespace::BeatmapEventType event;
    // private BeatmapObjectCallbackController _beatmapObjectCallbackController
    // Offset: 0x48
    GlobalNamespace::BeatmapObjectCallbackController* beatmapObjectCallbackController;
    // private LightWithIdManager _lightManager
    // Offset: 0x50
    GlobalNamespace::LightWithIdManager* lightManager;
    // private System.Boolean _lightIsOn
    // Offset: 0x58
    bool lightIsOn;
    // private UnityEngine.Color _offColor
    // Offset: 0x5C
    UnityEngine::Color offColor;
    // private System.Single _highlightValue
    // Offset: 0x6C
    float highlightValue;
    // private UnityEngine.Color _afterHighlightColor
    // Offset: 0x70
    UnityEngine::Color afterHighlightColor;
    // private UnityEngine.Color _highlightColor
    // Offset: 0x80
    UnityEngine::Color highlightColor;
    // private System.Single kFadeSpeed
    // Offset: 0x90
    float kFadeSpeed;
    // private System.Boolean _didProcessFirstEvent
    // Offset: 0x94
    bool didProcessFirstEvent;
    // private System.Boolean _initialized
    // Offset: 0x95
    bool initialized;
    // public System.Int32 get_LightsID()
    // Offset: 0xBE58E8
    int get_LightsID();
    // protected System.Void Start()
    // Offset: 0xBE58F0
    void Start();
    // private System.Void OnDestroy()
    // Offset: 0xBE5984
    void OnDestroy();
    // protected System.Void Update()
    // Offset: 0xBE5A5C
    void Update();
    // private System.Void HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(BeatmapEventData beatmapEventData)
    // Offset: 0xBE5C04
    void HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData);
    // private System.Void SetColor(UnityEngine.Color color)
    // Offset: 0xBE5BE0
    void SetColor(UnityEngine::Color color);
    // public System.Void .ctor()
    // Offset: 0xBE5EE8
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static LightSwitchEventEffect* New_ctor();
  }; // LightSwitchEventEffect
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::LightSwitchEventEffect*, "", "LightSwitchEventEffect");
#pragma pack(pop)
