// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:17 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: NoteCutParticlesEffect
  class NoteCutParticlesEffect;
  // Forward declaring type: ShockwaveEffect
  class ShockwaveEffect;
  // Forward declaring type: NoteDebrisSpawner
  class NoteDebrisSpawner;
  // Forward declaring type: NoteCutHapticEffect
  class NoteCutHapticEffect;
  // Forward declaring type: FlyingTextSpawner
  class FlyingTextSpawner;
  // Forward declaring type: BombExplosionEffect
  class BombExplosionEffect;
  // Forward declaring type: BeatmapObjectManager
  class BeatmapObjectManager;
  // Forward declaring type: ColorManager
  class ColorManager;
  // Forward declaring type: INoteController
  class INoteController;
  // Forward declaring type: NoteCutInfo
  class NoteCutInfo;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: TutorialNoteCutEffectSpawner
  class TutorialNoteCutEffectSpawner : public UnityEngine::MonoBehaviour {
    public:
    // private NoteCutParticlesEffect _noteCutParticlesEffect
    // Offset: 0x18
    GlobalNamespace::NoteCutParticlesEffect* noteCutParticlesEffect;
    // private ShockwaveEffect _shockwaveEffect
    // Offset: 0x20
    GlobalNamespace::ShockwaveEffect* shockwaveEffect;
    // private NoteDebrisSpawner _noteDebrisSpawner
    // Offset: 0x28
    GlobalNamespace::NoteDebrisSpawner* noteDebrisSpawner;
    // private NoteCutHapticEffect _noteCutHapticEffect
    // Offset: 0x30
    GlobalNamespace::NoteCutHapticEffect* noteCutHapticEffect;
    // private FlyingTextSpawner _failFlyingTextSpawner
    // Offset: 0x38
    GlobalNamespace::FlyingTextSpawner* failFlyingTextSpawner;
    // private BombExplosionEffect _bombExplosionEffect
    // Offset: 0x40
    GlobalNamespace::BombExplosionEffect* bombExplosionEffect;
    // private BeatmapObjectManager _beatmapObjectManager
    // Offset: 0x48
    GlobalNamespace::BeatmapObjectManager* beatmapObjectManager;
    // private ColorManager _colorManager
    // Offset: 0x50
    GlobalNamespace::ColorManager* colorManager;
    // private System.Boolean <handleWrongSaberTypeAsGoodAndDontWarnOnBadCuts>k__BackingField
    // Offset: 0x58
    bool handleWrongSaberTypeAsGoodAndDontWarnOnBadCuts;
    // public System.Boolean get_handleWrongSaberTypeAsGoodAndDontWarnOnBadCuts()
    // Offset: 0xC34460
    bool get_handleWrongSaberTypeAsGoodAndDontWarnOnBadCuts();
    // public System.Void set_handleWrongSaberTypeAsGoodAndDontWarnOnBadCuts(System.Boolean value)
    // Offset: 0xC34468
    void set_handleWrongSaberTypeAsGoodAndDontWarnOnBadCuts(bool value);
    // protected System.Void Start()
    // Offset: 0xC34474
    void Start();
    // protected System.Void OnDestroy()
    // Offset: 0xC34554
    void OnDestroy();
    // private System.Void HandleNoteWasCut(INoteController noteController, NoteCutInfo noteCutInfo)
    // Offset: 0xC34678
    void HandleNoteWasCut(GlobalNamespace::INoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo);
    // private System.Void SpawnNoteCutEffect(UnityEngine.Vector3 pos, INoteController noteController, NoteCutInfo noteCutInfo)
    // Offset: 0xC34AE4
    void SpawnNoteCutEffect(UnityEngine::Vector3 pos, GlobalNamespace::INoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo);
    // private System.Void SpawnBombCutEffect(UnityEngine.Vector3 pos, INoteController noteController, NoteCutInfo noteCutInfo)
    // Offset: 0xC34900
    void SpawnBombCutEffect(UnityEngine::Vector3 pos, GlobalNamespace::INoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo);
    // private System.Void HandleNoteWasMissed(INoteController noteController)
    // Offset: 0xC34F9C
    void HandleNoteWasMissed(GlobalNamespace::INoteController* noteController);
    // public System.Void .ctor()
    // Offset: 0xC350C0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static TutorialNoteCutEffectSpawner* New_ctor();
  }; // TutorialNoteCutEffectSpawner
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::TutorialNoteCutEffectSpawner*, "", "TutorialNoteCutEffectSpawner");
#pragma pack(pop)
