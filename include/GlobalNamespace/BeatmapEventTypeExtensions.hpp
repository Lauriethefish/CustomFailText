// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:09 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: BeatmapEventType
#include "GlobalNamespace/BeatmapEventType.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: BeatmapEventTypeExtensions
  class BeatmapEventTypeExtensions : public ::Il2CppObject {
    public:
    // static field const value: static public BeatmapEventType kEarlyRotationEvent
    static constexpr const int kEarlyRotationEvent = 14;
    // Get static field: static public BeatmapEventType kEarlyRotationEvent
    static GlobalNamespace::BeatmapEventType _get_kEarlyRotationEvent();
    // Set static field: static public BeatmapEventType kEarlyRotationEvent
    static void _set_kEarlyRotationEvent(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kLateRotationEvent
    static constexpr const int kLateRotationEvent = 15;
    // Get static field: static public BeatmapEventType kLateRotationEvent
    static GlobalNamespace::BeatmapEventType _get_kLateRotationEvent();
    // Set static field: static public BeatmapEventType kLateRotationEvent
    static void _set_kLateRotationEvent(GlobalNamespace::BeatmapEventType value);
    // static field const value: static public BeatmapEventType kBPMChangeEvent
    static constexpr const int kBPMChangeEvent = 10;
    // Get static field: static public BeatmapEventType kBPMChangeEvent
    static GlobalNamespace::BeatmapEventType _get_kBPMChangeEvent();
    // Set static field: static public BeatmapEventType kBPMChangeEvent
    static void _set_kBPMChangeEvent(GlobalNamespace::BeatmapEventType value);
    // static public System.Boolean IsBPMChangeEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x1979790
    static bool IsBPMChangeEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsRotationEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x1972254
    static bool IsRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsEarlyRotationEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x197ADF8
    static bool IsEarlyRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsLateRotationEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x197AE04
    static bool IsLateRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsEarlyEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x19753FC
    static bool IsEarlyEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
    // static public System.Boolean IsSpawnAffectingEvent(BeatmapEventType beatmapEventType)
    // Offset: 0x197AE10
    static bool IsSpawnAffectingEvent(GlobalNamespace::BeatmapEventType beatmapEventType);
  }; // BeatmapEventTypeExtensions
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::BeatmapEventTypeExtensions*, "", "BeatmapEventTypeExtensions");
#pragma pack(pop)
