// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:05 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: SteamVR_TrackedCamera
#include "GlobalNamespace/SteamVR_TrackedCamera.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Autogenerated type: SteamVR_TrackedCamera/VideoStream
  class SteamVR_TrackedCamera::VideoStream : public ::Il2CppObject {
    public:
    // private System.UInt32 <deviceIndex>k__BackingField
    // Offset: 0x10
    uint deviceIndex;
    // private System.UInt64 _handle
    // Offset: 0x18
    uint64_t handle;
    // private System.Boolean _hasCamera
    // Offset: 0x20
    bool hasCamera;
    // private System.UInt64 refCount
    // Offset: 0x28
    uint64_t refCount;
    // public System.Void .ctor(System.UInt32 deviceIndex)
    // Offset: 0xFBF75C
    static SteamVR_TrackedCamera::VideoStream* New_ctor(uint deviceIndex);
    // public System.UInt32 get_deviceIndex()
    // Offset: 0xFBF824
    uint get_deviceIndex();
    // private System.Void set_deviceIndex(System.UInt32 value)
    // Offset: 0xFBF82C
    void set_deviceIndex(uint value);
    // public System.UInt64 get_handle()
    // Offset: 0xFBF834
    uint64_t get_handle();
    // public System.Boolean get_hasCamera()
    // Offset: 0xFBF83C
    bool get_hasCamera();
    // public System.UInt64 Acquire()
    // Offset: 0xFBF844
    uint64_t Acquire();
    // public System.UInt64 Release()
    // Offset: 0xFBF900
    uint64_t Release();
  }; // SteamVR_TrackedCamera/VideoStream
}
DEFINE_IL2CPP_ARG_TYPE(GlobalNamespace::SteamVR_TrackedCamera::VideoStream*, "", "SteamVR_TrackedCamera/VideoStream");
#pragma pack(pop)
