// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:05 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: VerticalScrollIndicator
  class VerticalScrollIndicator;
  // Forward declaring type: ButtonBinder
  class ButtonBinder;
  // Forward declaring type: ItemForFocussedScrolling
  class ItemForFocussedScrolling;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Skipping declaration: Vector3 because it is already included!
  // Forward declaring type: Vector2
  struct Vector2;
}
// Forward declaring namespace: UnityEngine::UI
namespace UnityEngine::UI {
  // Forward declaring type: Button
  class Button;
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Autogenerated type: HMUI.ScrollView
  class ScrollView : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: HMUI::ScrollView::$$c
    class $$c;
    // Nested type: HMUI::ScrollView::$$c__DisplayClass25_0
    class $$c__DisplayClass25_0;
    // Nested type: HMUI::ScrollView::$$c__DisplayClass26_0
    class $$c__DisplayClass26_0;
    // private UnityEngine.RectTransform _viewport
    // Offset: 0x18
    UnityEngine::RectTransform* viewport;
    // private UnityEngine.RectTransform _contentRectTransform
    // Offset: 0x20
    UnityEngine::RectTransform* contentRectTransform;
    // private UnityEngine.UI.Button _pageUpButton
    // Offset: 0x28
    UnityEngine::UI::Button* pageUpButton;
    // private UnityEngine.UI.Button _pageDownButton
    // Offset: 0x30
    UnityEngine::UI::Button* pageDownButton;
    // private HMUI.VerticalScrollIndicator _verticalScrollIndicator
    // Offset: 0x38
    HMUI::VerticalScrollIndicator* verticalScrollIndicator;
    // private System.Single _smooth
    // Offset: 0x40
    float smooth;
    // private System.Single _pageStepRelativePosition
    // Offset: 0x44
    float pageStepRelativePosition;
    // private System.Single _scrollItemRelativeThresholdPosition
    // Offset: 0x48
    float scrollItemRelativeThresholdPosition;
    // private HMUI.ButtonBinder _buttonBinder
    // Offset: 0x50
    HMUI::ButtonBinder* buttonBinder;
    // private System.Single _dstPosY
    // Offset: 0x58
    float dstPosY;
    // private System.Single _scrollPageHeight
    // Offset: 0x5C
    float scrollPageHeight;
    // private System.Single _contentHeight
    // Offset: 0x60
    float contentHeight;
    // private System.Single[] _scrollFocusPosYs
    // Offset: 0x68
    ::Array<float>* scrollFocusPosYs;
    // protected System.Void Awake()
    // Offset: 0x10CB6D8
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x10CBA60
    void OnDestroy();
    // public System.Void ScrollDown(System.Boolean animated)
    // Offset: 0x10CBA74
    void ScrollDown(bool animated);
    // public System.Void ScrollToWorldPosition(UnityEngine.Vector3 worldPosition, System.Single pageRelativePosition, System.Boolean animated)
    // Offset: 0x10CBB60
    void ScrollToWorldPosition(UnityEngine::Vector3 worldPosition, float pageRelativePosition, bool animated);
    // public System.Void ScrollToWorldPositionIfOutsideArea(UnityEngine.Vector3 worldPosition, System.Single pageRelativePosition, System.Single relativeBoundaryStart, System.Single relativeBoundaryEnd, System.Boolean animated)
    // Offset: 0x10CBCD0
    void ScrollToWorldPositionIfOutsideArea(UnityEngine::Vector3 worldPosition, float pageRelativePosition, float relativeBoundaryStart, float relativeBoundaryEnd, bool animated);
    // public System.Void ScrollAt(System.Single dstPosY, System.Boolean animated)
    // Offset: 0x10CBAE4
    void ScrollAt(float dstPosY, bool animated);
    // private System.Void Setup()
    // Offset: 0x10CB808
    void Setup();
    // private UnityEngine.Vector2 WorldPositionToScrollViewPosition(UnityEngine.Vector3 worldPosition)
    // Offset: 0x10CBBA4
    UnityEngine::Vector2 WorldPositionToScrollViewPosition(UnityEngine::Vector3 worldPosition);
    // private System.Void ComputeScrollFocusPosY()
    // Offset: 0x10CBEC8
    void ComputeScrollFocusPosY();
    // protected System.Void Update()
    // Offset: 0x10CC064
    void Update();
    // private System.Void SetDstPosY(System.Single value)
    // Offset: 0x10CBD58
    void SetDstPosY(float value);
    // private System.Void UpdateVerticalScrollIndicator(System.Single posY)
    // Offset: 0x10CC194
    void UpdateVerticalScrollIndicator(float posY);
    // private System.Void PageUpButtonPressed()
    // Offset: 0x10CC304
    void PageUpButtonPressed();
    // private System.Void PageDownButtonPressed()
    // Offset: 0x10CC424
    void PageDownButtonPressed();
    // private System.Void RefreshButtonsInteractibility()
    // Offset: 0x10CB9C4
    void RefreshButtonsInteractibility();
    // private System.Single <ComputeScrollFocusPosY>b__21_0(HMUI.ItemForFocussedScrolling item)
    // Offset: 0x10CC57C
    float $ComputeScrollFocusPosY$b__21_0(HMUI::ItemForFocussedScrolling* item);
    // public System.Void .ctor()
    // Offset: 0x10CC55C
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static ScrollView* New_ctor();
  }; // HMUI.ScrollView
}
DEFINE_IL2CPP_ARG_TYPE(HMUI::ScrollView*, "HMUI", "ScrollView");
#pragma pack(pop)
