// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:05 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: HMUI
namespace HMUI {
  // Forward declaring type: ButtonBinder
  class ButtonBinder;
  // Forward declaring type: ContainerViewController
  class ContainerViewController;
  // Forward declaring type: Screen
  class Screen;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RectTransform
  class RectTransform;
  // Skipping declaration: Vector3 because it is already included!
}
// Forward declaring namespace: UnityEngine::EventSystems
namespace UnityEngine::EventSystems {
  // Forward declaring type: BaseRaycaster
  class BaseRaycaster;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action
  class Action;
}
// Forward declaring namespace: System::Collections
namespace System::Collections {
  // Forward declaring type: IEnumerator
  class IEnumerator;
}
// Completed forward declares
// Type namespace: HMUI
namespace HMUI {
  // Autogenerated type: HMUI.ViewController
  class ViewController : public UnityEngine::MonoBehaviour {
    public:
    // Nested type: HMUI::ViewController::DidActivateDelegate
    class DidActivateDelegate;
    // Nested type: HMUI::ViewController::DidDeactivateDelegate
    class DidDeactivateDelegate;
    // Nested type: HMUI::ViewController::ActivationType
    struct ActivationType;
    // Nested type: HMUI::ViewController::DeactivationType
    struct DeactivationType;
    // Nested type: HMUI::ViewController::SlideAnimationDirection
    struct SlideAnimationDirection;
    // Nested type: HMUI::ViewController::SlideAnimationType
    struct SlideAnimationType;
    // Nested type: HMUI::ViewController::$PresentViewControllerCoroutine$d__47
    class $PresentViewControllerCoroutine$d__47;
    // Nested type: HMUI::ViewController::$ReplaceViewControllerCoroutine$d__49
    class $ReplaceViewControllerCoroutine$d__49;
    // Nested type: HMUI::ViewController::$DismissViewControllerCoroutine$d__51
    class $DismissViewControllerCoroutine$d__51;
    // private HMUI.ViewController/DidActivateDelegate didActivateEvent
    // Offset: 0x18
    HMUI::ViewController::DidActivateDelegate* didActivateEvent;
    // private HMUI.ViewController/DidDeactivateDelegate didDeactivateEvent
    // Offset: 0x20
    HMUI::ViewController::DidDeactivateDelegate* didDeactivateEvent;
    // private HMUI.ButtonBinder <buttonBinder>k__BackingField
    // Offset: 0x28
    HMUI::ButtonBinder* buttonBinder;
    // private HMUI.ContainerViewController _containerViewController
    // Offset: 0x30
    HMUI::ContainerViewController* containerViewController;
    // private HMUI.ViewController _parentViewController
    // Offset: 0x38
    HMUI::ViewController* parentViewController;
    // private HMUI.ViewController _childViewController
    // Offset: 0x40
    HMUI::ViewController* childViewController;
    // private HMUI.Screen _screen
    // Offset: 0x48
    HMUI::Screen* screen;
    // private UnityEngine.RectTransform _rectTransform
    // Offset: 0x50
    UnityEngine::RectTransform* rectTransform;
    // private UnityEngine.EventSystems.BaseRaycaster _raycaster
    // Offset: 0x58
    UnityEngine::EventSystems::BaseRaycaster* raycaster;
    // private System.Boolean _wasActivatedBefore
    // Offset: 0x60
    bool wasActivatedBefore;
    // private System.Boolean _isActivated
    // Offset: 0x61
    bool isActivated;
    // protected System.Boolean _isInTransition
    // Offset: 0x62
    bool isInTransition;
    // public HMUI.ContainerViewController get_containerViewController()
    // Offset: 0x10D64B8
    HMUI::ContainerViewController* get_containerViewController();
    // public HMUI.Screen get_screen()
    // Offset: 0x10D64C0
    HMUI::Screen* get_screen();
    // public HMUI.ViewController get_parentViewController()
    // Offset: 0x10D64C8
    HMUI::ViewController* get_parentViewController();
    // public HMUI.ViewController get_childViewController()
    // Offset: 0x10D64D0
    HMUI::ViewController* get_childViewController();
    // public System.Boolean get_isInViewControllerHierarchy()
    // Offset: 0x10D64D8
    bool get_isInViewControllerHierarchy();
    // public System.Boolean get_isActivated()
    // Offset: 0x10D6548
    bool get_isActivated();
    // public System.Boolean get_wasActivatedBefore()
    // Offset: 0x10D6550
    bool get_wasActivatedBefore();
    // public System.Void add_didActivateEvent(HMUI.ViewController/DidActivateDelegate value)
    // Offset: 0x10D6558
    void add_didActivateEvent(HMUI::ViewController::DidActivateDelegate* value);
    // public System.Void remove_didActivateEvent(HMUI.ViewController/DidActivateDelegate value)
    // Offset: 0x10D65FC
    void remove_didActivateEvent(HMUI::ViewController::DidActivateDelegate* value);
    // public System.Void add_didDeactivateEvent(HMUI.ViewController/DidDeactivateDelegate value)
    // Offset: 0x10D66A0
    void add_didDeactivateEvent(HMUI::ViewController::DidDeactivateDelegate* value);
    // public System.Void remove_didDeactivateEvent(HMUI.ViewController/DidDeactivateDelegate value)
    // Offset: 0x10D6744
    void remove_didDeactivateEvent(HMUI::ViewController::DidDeactivateDelegate* value);
    // protected HMUI.ButtonBinder get_buttonBinder()
    // Offset: 0x10D67E8
    HMUI::ButtonBinder* get_buttonBinder();
    // private System.Void set_buttonBinder(HMUI.ButtonBinder value)
    // Offset: 0x10D67F0
    void set_buttonBinder(HMUI::ButtonBinder* value);
    // public UnityEngine.RectTransform get_rectTransform()
    // Offset: 0x10C8AE8
    UnityEngine::RectTransform* get_rectTransform();
    // protected System.Void OnDestroy()
    // Offset: 0x10D67F8
    void OnDestroy();
    // protected System.Void DidActivate(System.Boolean firstActivation, HMUI.ViewController/ActivationType activationType)
    // Offset: 0x10D680C
    void DidActivate(bool firstActivation, HMUI::ViewController::ActivationType activationType);
    // protected System.Void DidDeactivate(HMUI.ViewController/DeactivationType deactivationType)
    // Offset: 0x10D6810
    void DidDeactivate(HMUI::ViewController::DeactivationType deactivationType);
    // public System.Void __Init(HMUI.Screen screen, HMUI.ViewController parentViewController, HMUI.ContainerViewController containerViewController)
    // Offset: 0x10D6814
    void __Init(HMUI::Screen* screen, HMUI::ViewController* parentViewController, HMUI::ContainerViewController* containerViewController);
    // public System.Void __ResetViewController()
    // Offset: 0x10D69A4
    void __ResetViewController();
    // public System.Void __PresentViewController(HMUI.ViewController viewController, System.Action finishedCallback, System.Boolean immediately)
    // Offset: 0x10D6AA4
    void __PresentViewController(HMUI::ViewController* viewController, System::Action* finishedCallback, bool immediately);
    // private System.Collections.IEnumerator PresentViewControllerCoroutine(HMUI.ViewController newViewController, System.Action finishedCallback, System.Boolean immediately)
    // Offset: 0x10D6AD4
    System::Collections::IEnumerator* PresentViewControllerCoroutine(HMUI::ViewController* newViewController, System::Action* finishedCallback, bool immediately);
    // public System.Void __ReplaceViewController(HMUI.ViewController viewController, System.Action finishedCallback, System.Boolean immediately, HMUI.ViewController/SlideAnimationDirection slideAnimationDirection)
    // Offset: 0x10D6BC0
    void __ReplaceViewController(HMUI::ViewController* viewController, System::Action* finishedCallback, bool immediately, HMUI::ViewController::SlideAnimationDirection slideAnimationDirection);
    // private System.Collections.IEnumerator ReplaceViewControllerCoroutine(HMUI.ViewController newViewController, System.Action finishedCallback, System.Boolean immediately, HMUI.ViewController/SlideAnimationDirection slideAnimationDirection)
    // Offset: 0x10D6BF0
    System::Collections::IEnumerator* ReplaceViewControllerCoroutine(HMUI::ViewController* newViewController, System::Action* finishedCallback, bool immediately, HMUI::ViewController::SlideAnimationDirection slideAnimationDirection);
    // public System.Void __DismissViewController(System.Action finishedCallback, System.Boolean immediately)
    // Offset: 0x10D6CE4
    void __DismissViewController(System::Action* finishedCallback, bool immediately);
    // private System.Collections.IEnumerator DismissViewControllerCoroutine(System.Action finishedCallback, System.Boolean immediately)
    // Offset: 0x10D6D14
    System::Collections::IEnumerator* DismissViewControllerCoroutine(System::Action* finishedCallback, bool immediately);
    // public System.Void __Activate(HMUI.ViewController/ActivationType activationType)
    // Offset: 0x10D6DE4
    void __Activate(HMUI::ViewController::ActivationType activationType);
    // public System.Void __Deactivate(HMUI.ViewController/DeactivationType deactivationType, System.Boolean deactivateGameObject)
    // Offset: 0x10D7130
    void __Deactivate(HMUI::ViewController::DeactivationType deactivationType, bool deactivateGameObject);
    // protected System.Void DeactivateGameObject()
    // Offset: 0x10D7438
    void DeactivateGameObject();
    // public System.Boolean IsViewControllerInHierarchy(HMUI.ViewController viewController)
    // Offset: 0x10D7494
    bool IsViewControllerInHierarchy(HMUI::ViewController* viewController);
    // private UnityEngine.Vector3 EvaluateSlideAnimation(HMUI.ViewController/SlideAnimationDirection slideAnimationDirection, HMUI.ViewController/SlideAnimationType slideAnimationType, System.Single t)
    // Offset: 0x10D761C
    UnityEngine::Vector3 EvaluateSlideAnimation(HMUI::ViewController::SlideAnimationDirection slideAnimationDirection, HMUI::ViewController::SlideAnimationType slideAnimationType, float t);
    // static public System.Void Log(System.String message)
    // Offset: 0x10D77E4
    static void Log(::Il2CppString* message);
    // public System.Void .ctor()
    // Offset: 0x10D5BA0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    static ViewController* New_ctor();
  }; // HMUI.ViewController
}
DEFINE_IL2CPP_ARG_TYPE(HMUI::ViewController*, "HMUI", "ViewController");
#pragma pack(pop)
