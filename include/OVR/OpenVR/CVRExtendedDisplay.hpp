// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:57 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: OVR.OpenVR.IVRExtendedDisplay
#include "OVR/OpenVR/IVRExtendedDisplay.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Forward declaring namespace: OVR::OpenVR
namespace OVR::OpenVR {
  // Forward declaring type: EVREye
  struct EVREye;
}
// Completed forward declares
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Autogenerated type: OVR.OpenVR.CVRExtendedDisplay
  class CVRExtendedDisplay : public ::Il2CppObject {
    public:
    // private OVR.OpenVR.IVRExtendedDisplay FnTable
    // Offset: 0x10
    OVR::OpenVR::IVRExtendedDisplay FnTable;
    // System.Void .ctor(System.IntPtr pInterface)
    // Offset: 0xEB8048
    static CVRExtendedDisplay* New_ctor(System::IntPtr pInterface);
    // public System.Void GetWindowBounds(System.Int32 pnX, System.Int32 pnY, System.UInt32 pnWidth, System.UInt32 pnHeight)
    // Offset: 0xEB8158
    void GetWindowBounds(int& pnX, int& pnY, uint& pnWidth, uint& pnHeight);
    // public System.Void GetEyeOutputViewport(OVR.OpenVR.EVREye eEye, System.UInt32 pnX, System.UInt32 pnY, System.UInt32 pnWidth, System.UInt32 pnHeight)
    // Offset: 0xEB8184
    void GetEyeOutputViewport(OVR::OpenVR::EVREye eEye, uint& pnX, uint& pnY, uint& pnWidth, uint& pnHeight);
    // public System.Void GetDXGIOutputInfo(System.Int32 pnAdapterIndex, System.Int32 pnAdapterOutputIndex)
    // Offset: 0xEB81B0
    void GetDXGIOutputInfo(int& pnAdapterIndex, int& pnAdapterOutputIndex);
  }; // OVR.OpenVR.CVRExtendedDisplay
}
DEFINE_IL2CPP_ARG_TYPE(OVR::OpenVR::CVRExtendedDisplay*, "OVR.OpenVR", "CVRExtendedDisplay");
#pragma pack(pop)
