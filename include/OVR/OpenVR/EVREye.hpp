// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:57 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.Enum
#include "System/Enum.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Autogenerated type: OVR.OpenVR.EVREye
  struct EVREye : public System::Enum {
    public:
    // public System.Int32 value__
    // Offset: 0x0
    int value;
    // static field const value: static public OVR.OpenVR.EVREye Eye_Left
    static constexpr const int Eye_Left = 0;
    // Get static field: static public OVR.OpenVR.EVREye Eye_Left
    static OVR::OpenVR::EVREye _get_Eye_Left();
    // Set static field: static public OVR.OpenVR.EVREye Eye_Left
    static void _set_Eye_Left(OVR::OpenVR::EVREye value);
    // static field const value: static public OVR.OpenVR.EVREye Eye_Right
    static constexpr const int Eye_Right = 1;
    // Get static field: static public OVR.OpenVR.EVREye Eye_Right
    static OVR::OpenVR::EVREye _get_Eye_Right();
    // Set static field: static public OVR.OpenVR.EVREye Eye_Right
    static void _set_Eye_Right(OVR::OpenVR::EVREye value);
    // Creating value type constructor for type: EVREye
    EVREye(int value_ = {}) : value{value_} {}
  }; // OVR.OpenVR.EVREye
}
DEFINE_IL2CPP_ARG_TYPE(OVR::OpenVR::EVREye, "OVR.OpenVR", "EVREye");
#pragma pack(pop)
