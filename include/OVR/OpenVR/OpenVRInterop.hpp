// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:57 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OVR::OpenVR
namespace OVR::OpenVR {
  // Forward declaring type: EVRInitError
  struct EVRInitError;
  // Forward declaring type: EVRApplicationType
  struct EVRApplicationType;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Completed forward declares
// Type namespace: OVR.OpenVR
namespace OVR::OpenVR {
  // Autogenerated type: OVR.OpenVR.OpenVRInterop
  class OpenVRInterop : public ::Il2CppObject {
    public:
    // static System.UInt32 InitInternal(OVR.OpenVR.EVRInitError peError, OVR.OpenVR.EVRApplicationType eApplicationType)
    // Offset: 0xCAF758
    static uint InitInternal(OVR::OpenVR::EVRInitError& peError, OVR::OpenVR::EVRApplicationType eApplicationType);
    // static System.UInt32 InitInternal2(OVR.OpenVR.EVRInitError peError, OVR.OpenVR.EVRApplicationType eApplicationType, System.String pStartupInfo)
    // Offset: 0xCAF7EC
    static uint InitInternal2(OVR::OpenVR::EVRInitError& peError, OVR::OpenVR::EVRApplicationType eApplicationType, ::Il2CppString*& pStartupInfo);
    // static System.Void ShutdownInternal()
    // Offset: 0xCAF8A4
    static void ShutdownInternal();
    // static System.Boolean IsHmdPresent()
    // Offset: 0xCAF918
    static bool IsHmdPresent();
    // static System.Boolean IsRuntimeInstalled()
    // Offset: 0xCAF998
    static bool IsRuntimeInstalled();
    // static System.IntPtr GetStringForHmdError(OVR.OpenVR.EVRInitError error)
    // Offset: 0xCAFA8C
    static System::IntPtr GetStringForHmdError(OVR::OpenVR::EVRInitError error);
    // static System.IntPtr GetGenericInterface(System.String pchInterfaceVersion, OVR.OpenVR.EVRInitError peError)
    // Offset: 0xCAFB10
    static System::IntPtr GetGenericInterface(::Il2CppString*& pchInterfaceVersion, OVR::OpenVR::EVRInitError& peError);
    // static System.Boolean IsInterfaceVersionValid(System.String pchInterfaceVersion)
    // Offset: 0xCAFBBC
    static bool IsInterfaceVersionValid(::Il2CppString*& pchInterfaceVersion);
    // static System.UInt32 GetInitToken()
    // Offset: 0xCAFC5C
    static uint GetInitToken();
    // public System.Void .ctor()
    // Offset: 0xCB12BC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static OpenVRInterop* New_ctor();
  }; // OVR.OpenVR.OpenVRInterop
}
DEFINE_IL2CPP_ARG_TYPE(OVR::OpenVR::OpenVRInterop*, "OVR.OpenVR", "OpenVRInterop");
#pragma pack(pop)
