// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:42 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: NetEase.Docker
namespace NetEase::Docker {
  // Autogenerated type: NetEase.Docker.ScoreData
  struct ScoreData : public System::ValueType {
    public:
    // private System.String <Name>k__BackingField
    // Offset: 0x0
    ::Il2CppString* Name;
    // private System.Int32 <Score>k__BackingField
    // Offset: 0x8
    int Score;
    // private System.Int64 <TimeStamp>k__BackingField
    // Offset: 0x10
    int64_t TimeStamp;
    // Creating value type constructor for type: ScoreData
    ScoreData(::Il2CppString* Name_ = {}, int Score_ = {}, int64_t TimeStamp_ = {}) : Name{Name_}, Score{Score_}, TimeStamp{TimeStamp_} {}
    // public System.String get_Name()
    // Offset: 0xA5CCE4
    ::Il2CppString* get_Name();
    // public System.Void set_Name(System.String value)
    // Offset: 0xA5CCEC
    void set_Name(::Il2CppString* value);
    // public System.Int32 get_Score()
    // Offset: 0xA5CCF4
    int get_Score();
    // public System.Void set_Score(System.Int32 value)
    // Offset: 0xA5CCFC
    void set_Score(int value);
    // public System.Void set_TimeStamp(System.Int64 value)
    // Offset: 0xA5CD04
    void set_TimeStamp(int64_t value);
  }; // NetEase.Docker.ScoreData
}
DEFINE_IL2CPP_ARG_TYPE(NetEase::Docker::ScoreData, "NetEase.Docker", "ScoreData");
#pragma pack(pop)
