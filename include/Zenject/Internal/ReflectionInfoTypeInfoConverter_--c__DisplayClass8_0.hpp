// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:52 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: FieldInfo
  class FieldInfo;
}
// Completed forward declares
// Type namespace: Zenject.Internal
namespace Zenject::Internal {
  // Autogenerated type: Zenject.Internal.ReflectionInfoTypeInfoConverter/<>c__DisplayClass8_0
  class ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0 : public ::Il2CppObject {
    public:
    // public System.String propertyName
    // Offset: 0x10
    ::Il2CppString* propertyName;
    // public System.Collections.Generic.List`1<System.Reflection.FieldInfo> writeableFields
    // Offset: 0x18
    System::Collections::Generic::List_1<System::Reflection::FieldInfo*>* writeableFields;
    // System.Boolean <GetOnlyPropertySetter>b__0(System.Reflection.FieldInfo f)
    // Offset: 0xF2882C
    bool $GetOnlyPropertySetter$b__0(System::Reflection::FieldInfo* f);
    // System.Void <GetOnlyPropertySetter>b__2(System.Object injectable, System.Object value)
    // Offset: 0xF288D4
    void $GetOnlyPropertySetter$b__2(::Il2CppObject* injectable, ::Il2CppObject* value);
    // public System.Void .ctor()
    // Offset: 0xF286AC
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    static ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0* New_ctor();
  }; // Zenject.Internal.ReflectionInfoTypeInfoConverter/<>c__DisplayClass8_0
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::Internal::ReflectionInfoTypeInfoConverter::$$c__DisplayClass8_0*, "Zenject.Internal", "ReflectionInfoTypeInfoConverter/<>c__DisplayClass8_0");
#pragma pack(pop)
