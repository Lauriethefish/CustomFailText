// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:49 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: Zenject.IValidatable
#include "Zenject/IValidatable.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: InjectContext
  class InjectContext;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.LazyInject`1
  template<typename T>
  class LazyInject_1 : public ::Il2CppObject, public Zenject::IValidatable {
    public:
    // private readonly Zenject.DiContainer _container
    // Offset: 0x0
    Zenject::DiContainer* container;
    // private readonly Zenject.InjectContext _context
    // Offset: 0x0
    Zenject::InjectContext* context;
    // private System.Boolean _hasValue
    // Offset: 0x0
    bool hasValue;
    // private T _value
    // Offset: 0x0
    T value;
    // public System.Void .ctor(Zenject.DiContainer container, Zenject.InjectContext context)
    // Offset: 0x13B01AC
    static LazyInject_1<T>* New_ctor(Zenject::DiContainer* container, Zenject::InjectContext* context) {
      return (LazyInject_1<T>*)CRASH_UNLESS(il2cpp_utils::New(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<LazyInject_1<T>*>::get(), container, context));
    }
    // public T get_Value()
    // Offset: 0x13B0250
    T get_Value() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<T>(this, "get_Value"));
    }
    // private System.Void Zenject.IValidatable.Validate()
    // Offset: 0x13B022C
    // Implemented from: Zenject.IValidatable
    // Base method: System.Void IValidatable::Validate()
    void Zenject_IValidatable_Validate() {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "Zenject.IValidatable.Validate"));
    }
  }; // Zenject.LazyInject`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::LazyInject_1, "Zenject", "LazyInject`1");
#pragma pack(pop)
