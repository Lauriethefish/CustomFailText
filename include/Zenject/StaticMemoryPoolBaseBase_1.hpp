// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:49 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
// Including type: Zenject.IDespawnableMemoryPool`1
#include "Zenject/IDespawnableMemoryPool_1.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: Stack`1<T>
  template<typename T>
  class Stack_1;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.StaticMemoryPoolBaseBase`1
  template<typename TValue>
  class StaticMemoryPoolBaseBase_1 : public ::Il2CppObject, public Zenject::IDespawnableMemoryPool_1<TValue>, public Zenject::IMemoryPool, public System::IDisposable {
    public:
    // private readonly System.Collections.Generic.Stack`1<TValue> _stack
    // Offset: 0x0
    System::Collections::Generic::Stack_1<TValue>* stack;
    // private System.Action`1<TValue> _onDespawnedMethod
    // Offset: 0x0
    System::Action_1<TValue>* onDespawnedMethod;
    // private System.Int32 _activeCount
    // Offset: 0x0
    int activeCount;
    // public System.Void .ctor(System.Action`1<TValue> onDespawnedMethod)
    // Offset: 0x15DE674
    static StaticMemoryPoolBaseBase_1<TValue>* New_ctor(System::Action_1<TValue>* onDespawnedMethod) {
      return (StaticMemoryPoolBaseBase_1<TValue>*)CRASH_UNLESS(il2cpp_utils::New(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<StaticMemoryPoolBaseBase_1<TValue>*>::get(), onDespawnedMethod));
    }
    // public System.Void set_OnDespawnedMethod(System.Action`1<TValue> value)
    // Offset: 0x15DE70C
    void set_OnDespawnedMethod(System::Action_1<TValue>* value) {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "set_OnDespawnedMethod", value));
    }
    // private System.Void ResizeInternal(System.Int32 desiredPoolSize)
    // Offset: 0x15DE838
    void ResizeInternal(int desiredPoolSize) {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "ResizeInternal", desiredPoolSize));
    }
    // public System.Void ClearActiveCount()
    // Offset: 0x15DE9BC
    void ClearActiveCount() {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "ClearActiveCount"));
    }
    // protected TValue SpawnInternal()
    // Offset: 0x15DEAB4
    TValue SpawnInternal() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<TValue>(this, "SpawnInternal"));
    }
    // protected TValue Alloc()
    // Offset: 0xFFFFFFFF
    TValue Alloc() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<TValue>(this, "Alloc"));
    }
    // public System.Int32 get_NumTotal()
    // Offset: 0x15DE714
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Int32 IMemoryPool::get_NumTotal()
    int get_NumTotal() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_NumTotal"));
    }
    // public System.Int32 get_NumActive()
    // Offset: 0x15DE770
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Int32 IMemoryPool::get_NumActive()
    int get_NumActive() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_NumActive"));
    }
    // public System.Int32 get_NumInactive()
    // Offset: 0x15DE778
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Int32 IMemoryPool::get_NumInactive()
    int get_NumInactive() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_NumInactive"));
    }
    // public System.Type get_ItemType()
    // Offset: 0x15DE7A0
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Type IMemoryPool::get_ItemType()
    System::Type* get_ItemType() {
      return CRASH_UNLESS(il2cpp_utils::RunMethod<System::Type*>(this, "get_ItemType"));
    }
    // public System.Void Resize(System.Int32 desiredPoolSize)
    // Offset: 0x15DE814
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Void IMemoryPool::Resize(System.Int32 desiredPoolSize)
    void Resize(int desiredPoolSize) {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "Resize", desiredPoolSize));
    }
    // public System.Void Dispose()
    // Offset: 0x15DE9B8
    // Implemented from: System.IDisposable
    // Base method: System.Void IDisposable::Dispose()
    void Dispose() {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
    }
    // Creating proxy method: System_IDisposable_Dispose
    // Maps to method: Dispose
    void System_IDisposable_Dispose() {
      Dispose();
    }
    // public System.Void Clear()
    // Offset: 0x15DE9C4
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Void IMemoryPool::Clear()
    void Clear() {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "Clear"));
    }
    // public System.Void ShrinkBy(System.Int32 numToRemove)
    // Offset: 0x15DE9EC
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Void IMemoryPool::ShrinkBy(System.Int32 numToRemove)
    void ShrinkBy(int numToRemove) {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "ShrinkBy", numToRemove));
    }
    // public System.Void ExpandBy(System.Int32 numToAdd)
    // Offset: 0x15DEA50
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Void IMemoryPool::ExpandBy(System.Int32 numToAdd)
    void ExpandBy(int numToAdd) {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "ExpandBy", numToAdd));
    }
    // private System.Void Zenject.IMemoryPool.Despawn(System.Object item)
    // Offset: 0x15DEB38
    // Implemented from: Zenject.IMemoryPool
    // Base method: System.Void IMemoryPool::Despawn(System.Object item)
    void Zenject_IMemoryPool_Despawn(::Il2CppObject* item) {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "Zenject.IMemoryPool.Despawn", item));
    }
    // public System.Void Despawn(TValue element)
    // Offset: 0x15DEBD4
    // Implemented from: Zenject.IDespawnableMemoryPool`1
    // Base method: System.Void IDespawnableMemoryPool`1::Despawn(TValue element)
    void Despawn(TValue element) {
      CRASH_UNLESS(il2cpp_utils::RunMethod(this, "Despawn", element));
    }
  }; // Zenject.StaticMemoryPoolBaseBase`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::StaticMemoryPoolBaseBase_1, "Zenject", "StaticMemoryPoolBaseBase`1");
#pragma pack(pop)
