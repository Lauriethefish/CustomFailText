// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:45 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: Zenject.CopyNonLazyBinder
#include "Zenject/CopyNonLazyBinder.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: BindingCondition
  class BindingCondition;
  // Forward declaring type: BindInfo
  class BindInfo;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.ConditionCopyNonLazyBinder
  class ConditionCopyNonLazyBinder : public Zenject::CopyNonLazyBinder {
    public:
    // Nested type: Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // Nested type: Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    // Nested type: Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1
    class $$c__DisplayClass3_1;
    // Nested type: Zenject::ConditionCopyNonLazyBinder::$$c__4_1<T>
    template<typename T>
    class $$c__4_1;
    // Nested type: Zenject::ConditionCopyNonLazyBinder::$$c__5_1<T>
    template<typename T>
    class $$c__5_1;
    // public Zenject.CopyNonLazyBinder When(Zenject.BindingCondition condition)
    // Offset: 0xD54E6C
    Zenject::CopyNonLazyBinder* When(Zenject::BindingCondition* condition);
    // public Zenject.CopyNonLazyBinder WhenInjectedIntoInstance(System.Object instance)
    // Offset: 0xD54EA0
    Zenject::CopyNonLazyBinder* WhenInjectedIntoInstance(::Il2CppObject* instance);
    // public Zenject.CopyNonLazyBinder WhenInjectedInto(System.Type[] targets)
    // Offset: 0xD54F78
    Zenject::CopyNonLazyBinder* WhenInjectedInto(::Array<System::Type*>* targets);
    // public Zenject.CopyNonLazyBinder WhenInjectedInto()
    // Offset: 0x13D5DD8
    template<class T>
    Zenject::CopyNonLazyBinder* WhenInjectedInto() {
      return CRASH_UNLESS(il2cpp_utils::RunGenericMethod<Zenject::CopyNonLazyBinder*>(this, "WhenInjectedInto", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
    }
    // public Zenject.CopyNonLazyBinder WhenNotInjectedInto()
    // Offset: 0x13D5F8C
    template<class T>
    Zenject::CopyNonLazyBinder* WhenNotInjectedInto() {
      return CRASH_UNLESS(il2cpp_utils::RunGenericMethod<Zenject::CopyNonLazyBinder*>(this, "WhenNotInjectedInto", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
    }
    // public System.Void .ctor(Zenject.BindInfo bindInfo)
    // Offset: 0xD54E5C
    // Implemented from: Zenject.CopyNonLazyBinder
    // Base method: System.Void CopyNonLazyBinder::.ctor(Zenject.BindInfo bindInfo)
    // Base method: System.Void NonLazyBinder::.ctor(Zenject.BindInfo bindInfo)
    // Base method: System.Void IfNotBoundBinder::.ctor(Zenject.BindInfo bindInfo)
    static ConditionCopyNonLazyBinder* New_ctor(Zenject::BindInfo* bindInfo);
  }; // Zenject.ConditionCopyNonLazyBinder
}
DEFINE_IL2CPP_ARG_TYPE(Zenject::ConditionCopyNonLazyBinder*, "Zenject", "ConditionCopyNonLazyBinder");
#pragma pack(pop)
