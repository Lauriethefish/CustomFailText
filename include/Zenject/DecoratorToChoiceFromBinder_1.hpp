// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:46 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Zenject
namespace Zenject {
  // Forward declaring type: DiContainer
  class DiContainer;
  // Forward declaring type: BindInfo
  class BindInfo;
  // Forward declaring type: FactoryBindInfo
  class FactoryBindInfo;
  // Forward declaring type: FactoryFromBinder`2<TParam1, TContract>
  template<typename TParam1, typename TContract>
  class FactoryFromBinder_2;
}
// Completed forward declares
// Type namespace: Zenject
namespace Zenject {
  // Autogenerated type: Zenject.DecoratorToChoiceFromBinder`1
  template<typename TContract>
  class DecoratorToChoiceFromBinder_1 : public ::Il2CppObject {
    public:
    // private Zenject.DiContainer _bindContainer
    // Offset: 0x0
    Zenject::DiContainer* bindContainer;
    // private Zenject.BindInfo _bindInfo
    // Offset: 0x0
    Zenject::BindInfo* bindInfo;
    // private Zenject.FactoryBindInfo _factoryBindInfo
    // Offset: 0x0
    Zenject::FactoryBindInfo* factoryBindInfo;
    // public System.Void .ctor(Zenject.DiContainer bindContainer, Zenject.BindInfo bindInfo, Zenject.FactoryBindInfo factoryBindInfo)
    // Offset: 0x117C8F0
    static DecoratorToChoiceFromBinder_1<TContract>* New_ctor(Zenject::DiContainer* bindContainer, Zenject::BindInfo* bindInfo, Zenject::FactoryBindInfo* factoryBindInfo) {
      return (DecoratorToChoiceFromBinder_1<TContract>*)CRASH_UNLESS(il2cpp_utils::New(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<DecoratorToChoiceFromBinder_1<TContract>*>::get(), bindContainer, bindInfo, factoryBindInfo));
    }
    // public Zenject.FactoryFromBinder`2<TContract,TConcrete> With()
    // Offset: 0x13D6BF0
    template<class TConcrete>
    Zenject::FactoryFromBinder_2<TContract, TConcrete>* With() {
      static_assert(std::is_convertible_v<TConcrete, TContract>);
      return CRASH_UNLESS((il2cpp_utils::RunGenericMethod<Zenject::FactoryFromBinder_2<TContract, TConcrete>*>(this, "With", {il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TConcrete>::get()})));
    }
  }; // Zenject.DecoratorToChoiceFromBinder`1
}
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(Zenject::DecoratorToChoiceFromBinder_1, "Zenject", "DecoratorToChoiceFromBinder`1");
#pragma pack(pop)
