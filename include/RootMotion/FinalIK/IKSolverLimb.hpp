// Autogenerated from CppHeaderCreator on 7/24/2020 3:59:59 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverTrigonometric
#include "RootMotion/FinalIK/IKSolverTrigonometric.hpp"
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.IKSolverLimb
  class IKSolverLimb : public RootMotion::FinalIK::IKSolverTrigonometric {
    public:
    // Nested type: RootMotion::FinalIK::IKSolverLimb::BendModifier
    struct BendModifier;
    // Nested type: RootMotion::FinalIK::IKSolverLimb::AxisDirection
    struct AxisDirection;
    // Autogenerated type: RootMotion.FinalIK.IKSolverLimb/BendModifier
    struct BendModifier : public System::Enum {
      public:
      // public System.Int32 value__
      // Offset: 0x0
      int value;
      // static field const value: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Animation
      static constexpr const int Animation = 0;
      // Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Animation
      static RootMotion::FinalIK::IKSolverLimb::BendModifier _get_Animation();
      // Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Animation
      static void _set_Animation(RootMotion::FinalIK::IKSolverLimb::BendModifier value);
      // static field const value: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Target
      static constexpr const int Target = 1;
      // Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Target
      static RootMotion::FinalIK::IKSolverLimb::BendModifier _get_Target();
      // Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Target
      static void _set_Target(RootMotion::FinalIK::IKSolverLimb::BendModifier value);
      // static field const value: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Parent
      static constexpr const int Parent = 2;
      // Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Parent
      static RootMotion::FinalIK::IKSolverLimb::BendModifier _get_Parent();
      // Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Parent
      static void _set_Parent(RootMotion::FinalIK::IKSolverLimb::BendModifier value);
      // static field const value: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Arm
      static constexpr const int Arm = 3;
      // Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Arm
      static RootMotion::FinalIK::IKSolverLimb::BendModifier _get_Arm();
      // Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Arm
      static void _set_Arm(RootMotion::FinalIK::IKSolverLimb::BendModifier value);
      // static field const value: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Goal
      static constexpr const int Goal = 4;
      // Get static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Goal
      static RootMotion::FinalIK::IKSolverLimb::BendModifier _get_Goal();
      // Set static field: static public RootMotion.FinalIK.IKSolverLimb/BendModifier Goal
      static void _set_Goal(RootMotion::FinalIK::IKSolverLimb::BendModifier value);
      // Creating value type constructor for type: BendModifier
      BendModifier(int value_ = {}) : value{value_} {}
    }; // RootMotion.FinalIK.IKSolverLimb/BendModifier
    // public UnityEngine.AvatarIKGoal goal
    // Offset: 0xA8
    UnityEngine::AvatarIKGoal goal;
    // public RootMotion.FinalIK.IKSolverLimb/BendModifier bendModifier
    // Offset: 0xAC
    RootMotion::FinalIK::IKSolverLimb::BendModifier bendModifier;
    // public System.Single maintainRotationWeight
    // Offset: 0xB0
    float maintainRotationWeight;
    // public System.Single bendModifierWeight
    // Offset: 0xB4
    float bendModifierWeight;
    // public UnityEngine.Transform bendGoal
    // Offset: 0xB8
    UnityEngine::Transform* bendGoal;
    // private System.Boolean maintainBendFor1Frame
    // Offset: 0xC0
    bool maintainBendFor1Frame;
    // private System.Boolean maintainRotationFor1Frame
    // Offset: 0xC1
    bool maintainRotationFor1Frame;
    // private UnityEngine.Quaternion defaultRootRotation
    // Offset: 0xC4
    UnityEngine::Quaternion defaultRootRotation;
    // private UnityEngine.Quaternion parentDefaultRotation
    // Offset: 0xD4
    UnityEngine::Quaternion parentDefaultRotation;
    // private UnityEngine.Quaternion bone3RotationBeforeSolve
    // Offset: 0xE4
    UnityEngine::Quaternion bone3RotationBeforeSolve;
    // private UnityEngine.Quaternion maintainRotation
    // Offset: 0xF4
    UnityEngine::Quaternion maintainRotation;
    // private UnityEngine.Quaternion bone3DefaultRotation
    // Offset: 0x104
    UnityEngine::Quaternion bone3DefaultRotation;
    // private UnityEngine.Vector3 _bendNormal
    // Offset: 0x114
    UnityEngine::Vector3 bendNormal;
    // private UnityEngine.Vector3 animationNormal
    // Offset: 0x120
    UnityEngine::Vector3 animationNormal;
    // private RootMotion.FinalIK.IKSolverLimb/AxisDirection[] axisDirectionsLeft
    // Offset: 0x130
    ::Array<RootMotion::FinalIK::IKSolverLimb::AxisDirection>* axisDirectionsLeft;
    // private RootMotion.FinalIK.IKSolverLimb/AxisDirection[] axisDirectionsRight
    // Offset: 0x138
    ::Array<RootMotion::FinalIK::IKSolverLimb::AxisDirection>* axisDirectionsRight;
    // public System.Void MaintainRotation()
    // Offset: 0x1335A48
    void MaintainRotation();
    // public System.Void MaintainBend()
    // Offset: 0x1335A98
    void MaintainBend();
    // public System.Void .ctor(UnityEngine.AvatarIKGoal goal)
    // Offset: 0x1337100
    static IKSolverLimb* New_ctor(UnityEngine::AvatarIKGoal goal);
    // private RootMotion.FinalIK.IKSolverLimb/AxisDirection[] get_axisDirections()
    // Offset: 0x13371A0
    ::Array<RootMotion::FinalIK::IKSolverLimb::AxisDirection>* get_axisDirections();
    // private System.Void StoreAxisDirections(RootMotion.FinalIK.IKSolverLimb/AxisDirection[] axisDirections)
    // Offset: 0x1335F28
    void StoreAxisDirections(::Array<RootMotion::FinalIK::IKSolverLimb::AxisDirection>*& axisDirections);
    // private UnityEngine.Vector3 GetModifiedBendNormal()
    // Offset: 0x1336348
    UnityEngine::Vector3 GetModifiedBendNormal();
    // protected override System.Void OnInitiateVirtual()
    // Offset: 0x1335BAC
    // Implemented from: RootMotion.FinalIK.IKSolverTrigonometric
    // Base method: System.Void IKSolverTrigonometric::OnInitiateVirtual()
    void OnInitiateVirtual();
    // protected override System.Void OnUpdateVirtual()
    // Offset: 0x133621C
    // Implemented from: RootMotion.FinalIK.IKSolverTrigonometric
    // Base method: System.Void IKSolverTrigonometric::OnUpdateVirtual()
    void OnUpdateVirtual();
    // protected override System.Void OnPostSolveVirtual()
    // Offset: 0x1336DF8
    // Implemented from: RootMotion.FinalIK.IKSolverTrigonometric
    // Base method: System.Void IKSolverTrigonometric::OnPostSolveVirtual()
    void OnPostSolveVirtual();
    // public System.Void .ctor()
    // Offset: 0x1336F40
    // Implemented from: RootMotion.FinalIK.IKSolverTrigonometric
    // Base method: System.Void IKSolverTrigonometric::.ctor()
    // Base method: System.Void IKSolver::.ctor()
    // Base method: System.Void Object::.ctor()
    static IKSolverLimb* New_ctor();
  }; // RootMotion.FinalIK.IKSolverLimb
}
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::IKSolverLimb*, "RootMotion.FinalIK", "IKSolverLimb");
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::IKSolverLimb::BendModifier, "RootMotion.FinalIK", "IKSolverLimb/BendModifier");
#pragma pack(pop)
