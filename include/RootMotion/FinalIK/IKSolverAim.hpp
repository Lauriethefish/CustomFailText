// Autogenerated from CppHeaderCreator on 7/24/2020 3:59:59 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverHeuristic
#include "RootMotion/FinalIK/IKSolverHeuristic.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Transform
  class Transform;
}
// Forward declaring namespace: RootMotion::FinalIK
namespace RootMotion::FinalIK {
  // Forward declaring type: RotationLimit
  class RotationLimit;
}
// Completed forward declares
// Type namespace: RootMotion.FinalIK
namespace RootMotion::FinalIK {
  // Autogenerated type: RootMotion.FinalIK.IKSolverAim
  class IKSolverAim : public RootMotion::FinalIK::IKSolverHeuristic {
    public:
    // public UnityEngine.Transform transform
    // Offset: 0x88
    UnityEngine::Transform* transform;
    // public UnityEngine.Vector3 axis
    // Offset: 0x90
    UnityEngine::Vector3 axis;
    // public UnityEngine.Vector3 poleAxis
    // Offset: 0x9C
    UnityEngine::Vector3 poleAxis;
    // public UnityEngine.Vector3 polePosition
    // Offset: 0xA8
    UnityEngine::Vector3 polePosition;
    // public System.Single poleWeight
    // Offset: 0xB4
    float poleWeight;
    // public UnityEngine.Transform poleTarget
    // Offset: 0xB8
    UnityEngine::Transform* poleTarget;
    // public System.Single clampWeight
    // Offset: 0xC0
    float clampWeight;
    // public System.Int32 clampSmoothing
    // Offset: 0xC4
    int clampSmoothing;
    // public RootMotion.FinalIK.IKSolver/IterationDelegate OnPreIteration
    // Offset: 0xC8
    RootMotion::FinalIK::IKSolver::IterationDelegate* OnPreIteration;
    // private System.Single step
    // Offset: 0xD0
    float step;
    // private UnityEngine.Vector3 clampedIKPosition
    // Offset: 0xD4
    UnityEngine::Vector3 clampedIKPosition;
    // private RootMotion.FinalIK.RotationLimit transformLimit
    // Offset: 0xE0
    RootMotion::FinalIK::RotationLimit* transformLimit;
    // private UnityEngine.Transform lastTransform
    // Offset: 0xE8
    UnityEngine::Transform* lastTransform;
    // public System.Single GetAngle()
    // Offset: 0x1327CF4
    float GetAngle();
    // public UnityEngine.Vector3 get_transformAxis()
    // Offset: 0x1327DF4
    UnityEngine::Vector3 get_transformAxis();
    // public UnityEngine.Vector3 get_transformPoleAxis()
    // Offset: 0x1327EC0
    UnityEngine::Vector3 get_transformPoleAxis();
    // private System.Void Solve()
    // Offset: 0x1328BA4
    void Solve();
    // private UnityEngine.Vector3 GetClampedIKPosition()
    // Offset: 0x13287CC
    UnityEngine::Vector3 GetClampedIKPosition();
    // private System.Void RotateToTarget(UnityEngine.Vector3 targetPosition, RootMotion.FinalIK.IKSolver/Bone bone, System.Single weight)
    // Offset: 0x1328C60
    void RotateToTarget(UnityEngine::Vector3 targetPosition, RootMotion::FinalIK::IKSolver::Bone* bone, float weight);
    // protected override System.Void OnInitiate()
    // Offset: 0x1327F8C
    // Implemented from: RootMotion.FinalIK.IKSolverHeuristic
    // Base method: System.Void IKSolverHeuristic::OnInitiate()
    void OnInitiate();
    // protected override System.Void OnUpdate()
    // Offset: 0x1328214
    // Implemented from: RootMotion.FinalIK.IKSolverHeuristic
    // Base method: System.Void IKSolverHeuristic::OnUpdate()
    void OnUpdate();
    // protected override System.Int32 get_minBones()
    // Offset: 0x1328C58
    // Implemented from: RootMotion.FinalIK.IKSolverHeuristic
    // Base method: System.Int32 IKSolverHeuristic::get_minBones()
    int get_minBones();
    // protected override UnityEngine.Vector3 get_localDirection()
    // Offset: 0x1329204
    // Implemented from: RootMotion.FinalIK.IKSolverHeuristic
    // Base method: UnityEngine.Vector3 IKSolverHeuristic::get_localDirection()
    UnityEngine::Vector3 get_localDirection();
    // public System.Void .ctor()
    // Offset: 0x1329278
    // Implemented from: RootMotion.FinalIK.IKSolverHeuristic
    // Base method: System.Void IKSolverHeuristic::.ctor()
    // Base method: System.Void IKSolver::.ctor()
    // Base method: System.Void Object::.ctor()
    static IKSolverAim* New_ctor();
  }; // RootMotion.FinalIK.IKSolverAim
}
DEFINE_IL2CPP_ARG_TYPE(RootMotion::FinalIK::IKSolverAim*, "RootMotion.FinalIK", "IKSolverAim");
#pragma pack(pop)
