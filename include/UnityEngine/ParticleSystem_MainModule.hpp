// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:34 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Autogenerated type: UnityEngine.ParticleSystem/MainModule
  struct ParticleSystem::MainModule : public System::ValueType {
    public:
    // UnityEngine.ParticleSystem m_ParticleSystem
    // Offset: 0x0
    UnityEngine::ParticleSystem* m_ParticleSystem;
    // Creating value type constructor for type: MainModule
    MainModule(UnityEngine::ParticleSystem* m_ParticleSystem_ = {}) : m_ParticleSystem{m_ParticleSystem_} {}
    // System.Void .ctor(UnityEngine.ParticleSystem particleSystem)
    // Offset: 0xA5BC60
    static ParticleSystem::MainModule* New_ctor(UnityEngine::ParticleSystem* particleSystem);
    // public System.Single get_duration()
    // Offset: 0xA5BC68
    float get_duration();
    // public System.Boolean get_loop()
    // Offset: 0xA5BCA8
    bool get_loop();
    // public UnityEngine.ParticleSystem/MinMaxCurve get_startDelay()
    // Offset: 0xA5BCE8
    UnityEngine::ParticleSystem::MinMaxCurve get_startDelay();
    // public UnityEngine.ParticleSystem/MinMaxCurve get_startLifetime()
    // Offset: 0xA5BD54
    UnityEngine::ParticleSystem::MinMaxCurve get_startLifetime();
    // public System.Void set_startLifetime(UnityEngine.ParticleSystem/MinMaxCurve value)
    // Offset: 0xA5BDC0
    void set_startLifetime(UnityEngine::ParticleSystem::MinMaxCurve value);
    // public UnityEngine.ParticleSystem/MinMaxCurve get_startSpeed()
    // Offset: 0xA5BE18
    UnityEngine::ParticleSystem::MinMaxCurve get_startSpeed();
    // public System.Void set_startSpeedMultiplier(System.Single value)
    // Offset: 0xA5BE84
    void set_startSpeedMultiplier(float value);
    // public UnityEngine.ParticleSystem/MinMaxGradient get_startColor()
    // Offset: 0xA5BED4
    UnityEngine::ParticleSystem::MinMaxGradient get_startColor();
    // public System.Void set_startColor(UnityEngine.ParticleSystem/MinMaxGradient value)
    // Offset: 0xA5BF58
    void set_startColor(UnityEngine::ParticleSystem::MinMaxGradient value);
    // public System.Int32 get_maxParticles()
    // Offset: 0xA5BFC0
    int get_maxParticles();
    // public System.Void set_maxParticles(System.Int32 value)
    // Offset: 0xA5C000
    void set_maxParticles(int value);
    // static private System.Single get_duration_Injected(UnityEngine.ParticleSystem/MainModule _unity_self)
    // Offset: 0x1952BDC
    static float get_duration_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self);
    // static private System.Boolean get_loop_Injected(UnityEngine.ParticleSystem/MainModule _unity_self)
    // Offset: 0x1952C5C
    static bool get_loop_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self);
    // static private System.Void get_startDelay_Injected(UnityEngine.ParticleSystem/MainModule _unity_self, UnityEngine.ParticleSystem/MinMaxCurve ret)
    // Offset: 0x1952D08
    static void get_startDelay_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self, UnityEngine::ParticleSystem::MinMaxCurve& ret);
    // static private System.Void get_startLifetime_Injected(UnityEngine.ParticleSystem/MainModule _unity_self, UnityEngine.ParticleSystem/MinMaxCurve ret)
    // Offset: 0x1952DC4
    static void get_startLifetime_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self, UnityEngine::ParticleSystem::MinMaxCurve& ret);
    // static private System.Void set_startLifetime_Injected(UnityEngine.ParticleSystem/MainModule _unity_self, UnityEngine.ParticleSystem/MinMaxCurve value)
    // Offset: 0x1952E64
    static void set_startLifetime_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self, UnityEngine::ParticleSystem::MinMaxCurve& value);
    // static private System.Void get_startSpeed_Injected(UnityEngine.ParticleSystem/MainModule _unity_self, UnityEngine.ParticleSystem/MinMaxCurve ret)
    // Offset: 0x1952F20
    static void get_startSpeed_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self, UnityEngine::ParticleSystem::MinMaxCurve& ret);
    // static private System.Void set_startSpeedMultiplier_Injected(UnityEngine.ParticleSystem/MainModule _unity_self, System.Single value)
    // Offset: 0x1952FC0
    static void set_startSpeedMultiplier_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self, float value);
    // static private System.Void get_startColor_Injected(UnityEngine.ParticleSystem/MainModule _unity_self, UnityEngine.ParticleSystem/MinMaxGradient ret)
    // Offset: 0x1953094
    static void get_startColor_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self, UnityEngine::ParticleSystem::MinMaxGradient& ret);
    // static private System.Void set_startColor_Injected(UnityEngine.ParticleSystem/MainModule _unity_self, UnityEngine.ParticleSystem/MinMaxGradient value)
    // Offset: 0x1953134
    static void set_startColor_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self, UnityEngine::ParticleSystem::MinMaxGradient& value);
    // static private System.Int32 get_maxParticles_Injected(UnityEngine.ParticleSystem/MainModule _unity_self)
    // Offset: 0x19531C4
    static int get_maxParticles_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self);
    // static private System.Void set_maxParticles_Injected(UnityEngine.ParticleSystem/MainModule _unity_self, System.Int32 value)
    // Offset: 0x1953254
    static void set_maxParticles_Injected(UnityEngine::ParticleSystem::MainModule& _unity_self, int value);
  }; // UnityEngine.ParticleSystem/MainModule
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::ParticleSystem::MainModule, "UnityEngine", "ParticleSystem/MainModule");
#pragma pack(pop)
