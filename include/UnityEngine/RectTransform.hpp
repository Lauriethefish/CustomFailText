// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:29 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Rect
  struct Rect;
  // Forward declaring type: Vector2
  struct Vector2;
  // Skipping declaration: Vector3 because it is already included!
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Autogenerated type: UnityEngine.RectTransform
  class RectTransform : public UnityEngine::Transform {
    public:
    // Nested type: UnityEngine::RectTransform::Axis
    struct Axis;
    // Nested type: UnityEngine::RectTransform::ReapplyDrivenProperties
    class ReapplyDrivenProperties;
    // Get static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties reapplyDrivenProperties
    static UnityEngine::RectTransform::ReapplyDrivenProperties* _get_reapplyDrivenProperties();
    // Set static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties reapplyDrivenProperties
    static void _set_reapplyDrivenProperties(UnityEngine::RectTransform::ReapplyDrivenProperties* value);
    // static public System.Void add_reapplyDrivenProperties(UnityEngine.RectTransform/ReapplyDrivenProperties value)
    // Offset: 0x14083C0
    static void add_reapplyDrivenProperties(UnityEngine::RectTransform::ReapplyDrivenProperties* value);
    // static public System.Void remove_reapplyDrivenProperties(UnityEngine.RectTransform/ReapplyDrivenProperties value)
    // Offset: 0x1408474
    static void remove_reapplyDrivenProperties(UnityEngine::RectTransform::ReapplyDrivenProperties* value);
    // public UnityEngine.Rect get_rect()
    // Offset: 0x1408528
    UnityEngine::Rect get_rect();
    // public UnityEngine.Vector2 get_anchorMin()
    // Offset: 0x14085D4
    UnityEngine::Vector2 get_anchorMin();
    // public System.Void set_anchorMin(UnityEngine.Vector2 value)
    // Offset: 0x140867C
    void set_anchorMin(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_anchorMax()
    // Offset: 0x1408720
    UnityEngine::Vector2 get_anchorMax();
    // public System.Void set_anchorMax(UnityEngine.Vector2 value)
    // Offset: 0x14087C8
    void set_anchorMax(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_anchoredPosition()
    // Offset: 0x140886C
    UnityEngine::Vector2 get_anchoredPosition();
    // public System.Void set_anchoredPosition(UnityEngine.Vector2 value)
    // Offset: 0x1408914
    void set_anchoredPosition(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_sizeDelta()
    // Offset: 0x14089B8
    UnityEngine::Vector2 get_sizeDelta();
    // public System.Void set_sizeDelta(UnityEngine.Vector2 value)
    // Offset: 0x1408A60
    void set_sizeDelta(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_pivot()
    // Offset: 0x1408B04
    UnityEngine::Vector2 get_pivot();
    // public System.Void set_pivot(UnityEngine.Vector2 value)
    // Offset: 0x1408BAC
    void set_pivot(UnityEngine::Vector2 value);
    // public System.Void set_anchoredPosition3D(UnityEngine.Vector3 value)
    // Offset: 0x1408C50
    void set_anchoredPosition3D(UnityEngine::Vector3 value);
    // public System.Void set_offsetMin(UnityEngine.Vector2 value)
    // Offset: 0x1408CB8
    void set_offsetMin(UnityEngine::Vector2 value);
    // public UnityEngine.Vector2 get_offsetMax()
    // Offset: 0x1408E54
    UnityEngine::Vector2 get_offsetMax();
    // public System.Void set_offsetMax(UnityEngine.Vector2 value)
    // Offset: 0x1408F48
    void set_offsetMax(UnityEngine::Vector2 value);
    // public System.Void GetLocalCorners(UnityEngine.Vector3[] fourCornersArray)
    // Offset: 0x14090DC
    void GetLocalCorners(::Array<UnityEngine::Vector3>* fourCornersArray);
    // public System.Void GetWorldCorners(UnityEngine.Vector3[] fourCornersArray)
    // Offset: 0x14092AC
    void GetWorldCorners(::Array<UnityEngine::Vector3>* fourCornersArray);
    // public System.Void SetSizeWithCurrentAnchors(UnityEngine.RectTransform/Axis axis, System.Single size)
    // Offset: 0x14093D4
    void SetSizeWithCurrentAnchors(UnityEngine::RectTransform::Axis axis, float size);
    // static System.Void SendReapplyDrivenProperties(UnityEngine.RectTransform driven)
    // Offset: 0x1409598
    static void SendReapplyDrivenProperties(UnityEngine::RectTransform* driven);
    // private UnityEngine.Vector2 GetParentSize()
    // Offset: 0x140949C
    UnityEngine::Vector2 GetParentSize();
    // private System.Void get_rect_Injected(UnityEngine.Rect ret)
    // Offset: 0x1408584
    void get_rect_Injected(UnityEngine::Rect& ret);
    // private System.Void get_anchorMin_Injected(UnityEngine.Vector2 ret)
    // Offset: 0x140862C
    void get_anchorMin_Injected(UnityEngine::Vector2& ret);
    // private System.Void set_anchorMin_Injected(UnityEngine.Vector2 value)
    // Offset: 0x14086D0
    void set_anchorMin_Injected(UnityEngine::Vector2& value);
    // private System.Void get_anchorMax_Injected(UnityEngine.Vector2 ret)
    // Offset: 0x1408778
    void get_anchorMax_Injected(UnityEngine::Vector2& ret);
    // private System.Void set_anchorMax_Injected(UnityEngine.Vector2 value)
    // Offset: 0x140881C
    void set_anchorMax_Injected(UnityEngine::Vector2& value);
    // private System.Void get_anchoredPosition_Injected(UnityEngine.Vector2 ret)
    // Offset: 0x14088C4
    void get_anchoredPosition_Injected(UnityEngine::Vector2& ret);
    // private System.Void set_anchoredPosition_Injected(UnityEngine.Vector2 value)
    // Offset: 0x1408968
    void set_anchoredPosition_Injected(UnityEngine::Vector2& value);
    // private System.Void get_sizeDelta_Injected(UnityEngine.Vector2 ret)
    // Offset: 0x1408A10
    void get_sizeDelta_Injected(UnityEngine::Vector2& ret);
    // private System.Void set_sizeDelta_Injected(UnityEngine.Vector2 value)
    // Offset: 0x1408AB4
    void set_sizeDelta_Injected(UnityEngine::Vector2& value);
    // private System.Void get_pivot_Injected(UnityEngine.Vector2 ret)
    // Offset: 0x1408B5C
    void get_pivot_Injected(UnityEngine::Vector2& ret);
    // private System.Void set_pivot_Injected(UnityEngine.Vector2 value)
    // Offset: 0x1408C00
    void set_pivot_Injected(UnityEngine::Vector2& value);
  }; // UnityEngine.RectTransform
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::RectTransform*, "UnityEngine", "RectTransform");
#pragma pack(pop)
