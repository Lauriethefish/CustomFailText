// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:34 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: KeyCode
  struct KeyCode;
  // Forward declaring type: Touch
  struct Touch;
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Vector2
  struct Vector2;
  // Forward declaring type: IMECompositionMode
  struct IMECompositionMode;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Autogenerated type: UnityEngine.Input
  class Input : public ::Il2CppObject {
    public:
    // static private System.Boolean GetKeyInt(UnityEngine.KeyCode key)
    // Offset: 0x195D660
    static bool GetKeyInt(UnityEngine::KeyCode key);
    // static private System.Boolean GetKeyUpInt(UnityEngine.KeyCode key)
    // Offset: 0x195D6A0
    static bool GetKeyUpInt(UnityEngine::KeyCode key);
    // static private System.Boolean GetKeyDownInt(UnityEngine.KeyCode key)
    // Offset: 0x195D6E0
    static bool GetKeyDownInt(UnityEngine::KeyCode key);
    // static private System.Boolean GetKeyDownString(System.String name)
    // Offset: 0x195D720
    static bool GetKeyDownString(::Il2CppString* name);
    // static public System.Single GetAxis(System.String axisName)
    // Offset: 0x195D760
    static float GetAxis(::Il2CppString* axisName);
    // static public System.Single GetAxisRaw(System.String axisName)
    // Offset: 0x195D7A0
    static float GetAxisRaw(::Il2CppString* axisName);
    // static public System.Boolean GetButton(System.String buttonName)
    // Offset: 0x195D7E0
    static bool GetButton(::Il2CppString* buttonName);
    // static public System.Boolean GetButtonDown(System.String buttonName)
    // Offset: 0x195D820
    static bool GetButtonDown(::Il2CppString* buttonName);
    // static public System.Boolean GetMouseButton(System.Int32 button)
    // Offset: 0x195D860
    static bool GetMouseButton(int button);
    // static public System.Boolean GetMouseButtonDown(System.Int32 button)
    // Offset: 0x195D8A0
    static bool GetMouseButtonDown(int button);
    // static public System.Boolean GetMouseButtonUp(System.Int32 button)
    // Offset: 0x195D8E0
    static bool GetMouseButtonUp(int button);
    // static public UnityEngine.Touch GetTouch(System.Int32 index)
    // Offset: 0x195D920
    static UnityEngine::Touch GetTouch(int index);
    // static public System.Boolean GetKey(UnityEngine.KeyCode key)
    // Offset: 0x195D9EC
    static bool GetKey(UnityEngine::KeyCode key);
    // static public System.Boolean GetKeyUp(UnityEngine.KeyCode key)
    // Offset: 0x195DA2C
    static bool GetKeyUp(UnityEngine::KeyCode key);
    // static public System.Boolean GetKeyDown(UnityEngine.KeyCode key)
    // Offset: 0x195DA6C
    static bool GetKeyDown(UnityEngine::KeyCode key);
    // static public System.Boolean GetKeyDown(System.String name)
    // Offset: 0x195DAAC
    static bool GetKeyDown(::Il2CppString* name);
    // static public System.Boolean get_anyKeyDown()
    // Offset: 0x195DAEC
    static bool get_anyKeyDown();
    // static public UnityEngine.Vector3 get_mousePosition()
    // Offset: 0x195DB20
    static UnityEngine::Vector3 get_mousePosition();
    // static public UnityEngine.Vector2 get_mouseScrollDelta()
    // Offset: 0x195DBB8
    static UnityEngine::Vector2 get_mouseScrollDelta();
    // static public UnityEngine.IMECompositionMode get_imeCompositionMode()
    // Offset: 0x195DC40
    static UnityEngine::IMECompositionMode get_imeCompositionMode();
    // static public System.Void set_imeCompositionMode(UnityEngine.IMECompositionMode value)
    // Offset: 0x195DC74
    static void set_imeCompositionMode(UnityEngine::IMECompositionMode value);
    // static public System.String get_compositionString()
    // Offset: 0x195DCB4
    static ::Il2CppString* get_compositionString();
    // static public UnityEngine.Vector2 get_compositionCursorPos()
    // Offset: 0x195DCE8
    static UnityEngine::Vector2 get_compositionCursorPos();
    // static public System.Void set_compositionCursorPos(UnityEngine.Vector2 value)
    // Offset: 0x195DD70
    static void set_compositionCursorPos(UnityEngine::Vector2 value);
    // static public System.Boolean get_mousePresent()
    // Offset: 0x195DDF4
    static bool get_mousePresent();
    // static public System.Int32 get_touchCount()
    // Offset: 0x195DE28
    static int get_touchCount();
    // static public System.Boolean get_touchSupported()
    // Offset: 0x195DE5C
    static bool get_touchSupported();
    // static private System.Void GetTouch_Injected(System.Int32 index, UnityEngine.Touch ret)
    // Offset: 0x195D99C
    static void GetTouch_Injected(int index, UnityEngine::Touch& ret);
    // static private System.Void get_mousePosition_Injected(UnityEngine.Vector3 ret)
    // Offset: 0x195DB78
    static void get_mousePosition_Injected(UnityEngine::Vector3& ret);
    // static private System.Void get_mouseScrollDelta_Injected(UnityEngine.Vector2 ret)
    // Offset: 0x195DC00
    static void get_mouseScrollDelta_Injected(UnityEngine::Vector2& ret);
    // static private System.Void get_compositionCursorPos_Injected(UnityEngine.Vector2 ret)
    // Offset: 0x195DD30
    static void get_compositionCursorPos_Injected(UnityEngine::Vector2& ret);
    // static private System.Void set_compositionCursorPos_Injected(UnityEngine.Vector2 value)
    // Offset: 0x195DDB4
    static void set_compositionCursorPos_Injected(UnityEngine::Vector2& value);
  }; // UnityEngine.Input
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Input*, "UnityEngine", "Input");
#pragma pack(pop)
