// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:26 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Bounds
  struct Bounds;
  // Forward declaring type: Material
  class Material;
  // Forward declaring type: MaterialPropertyBlock
  class MaterialPropertyBlock;
  // Forward declaring type: MotionVectorGenerationMode
  struct MotionVectorGenerationMode;
}
// Forward declaring namespace: UnityEngine::Rendering
namespace UnityEngine::Rendering {
  // Forward declaring type: ShadowCastingMode
  struct ShadowCastingMode;
  // Forward declaring type: LightProbeUsage
  struct LightProbeUsage;
  // Forward declaring type: ReflectionProbeUsage
  struct ReflectionProbeUsage;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Autogenerated type: UnityEngine.Renderer
  class Renderer : public UnityEngine::Component {
    public:
    // public UnityEngine.Bounds get_bounds()
    // Offset: 0x136FFB8
    UnityEngine::Bounds get_bounds();
    // private UnityEngine.Material GetMaterial()
    // Offset: 0x1370074
    UnityEngine::Material* GetMaterial();
    // private UnityEngine.Material GetSharedMaterial()
    // Offset: 0x13700B4
    UnityEngine::Material* GetSharedMaterial();
    // private System.Void SetMaterial(UnityEngine.Material m)
    // Offset: 0x13700F4
    void SetMaterial(UnityEngine::Material* m);
    // private System.Void CopySharedMaterialArray(UnityEngine.Material[] m)
    // Offset: 0x1370144
    void CopySharedMaterialArray(::Array<UnityEngine::Material*>*& m);
    // private System.Void SetMaterialArray(UnityEngine.Material[] m)
    // Offset: 0x1370194
    void SetMaterialArray(::Array<UnityEngine::Material*>* m);
    // System.Void Internal_SetPropertyBlock(UnityEngine.MaterialPropertyBlock properties)
    // Offset: 0x13701E4
    void Internal_SetPropertyBlock(UnityEngine::MaterialPropertyBlock* properties);
    // public System.Void SetPropertyBlock(UnityEngine.MaterialPropertyBlock properties)
    // Offset: 0x1370234
    void SetPropertyBlock(UnityEngine::MaterialPropertyBlock* properties);
    // public System.Boolean get_enabled()
    // Offset: 0x1370284
    bool get_enabled();
    // public System.Void set_enabled(System.Boolean value)
    // Offset: 0x13702C4
    void set_enabled(bool value);
    // public System.Boolean get_isVisible()
    // Offset: 0x1370314
    bool get_isVisible();
    // public System.Void set_shadowCastingMode(UnityEngine.Rendering.ShadowCastingMode value)
    // Offset: 0x1370354
    void set_shadowCastingMode(UnityEngine::Rendering::ShadowCastingMode value);
    // public System.Void set_receiveShadows(System.Boolean value)
    // Offset: 0x13703A4
    void set_receiveShadows(bool value);
    // public System.Void set_motionVectorGenerationMode(UnityEngine.MotionVectorGenerationMode value)
    // Offset: 0x13703F4
    void set_motionVectorGenerationMode(UnityEngine::MotionVectorGenerationMode value);
    // public System.Void set_lightProbeUsage(UnityEngine.Rendering.LightProbeUsage value)
    // Offset: 0x1370444
    void set_lightProbeUsage(UnityEngine::Rendering::LightProbeUsage value);
    // public System.Void set_reflectionProbeUsage(UnityEngine.Rendering.ReflectionProbeUsage value)
    // Offset: 0x1370494
    void set_reflectionProbeUsage(UnityEngine::Rendering::ReflectionProbeUsage value);
    // public System.Int32 get_sortingLayerID()
    // Offset: 0x13704E4
    int get_sortingLayerID();
    // public System.Void set_sortingLayerID(System.Int32 value)
    // Offset: 0x1370524
    void set_sortingLayerID(int value);
    // public System.Int32 get_sortingOrder()
    // Offset: 0x1370574
    int get_sortingOrder();
    // public System.Void set_sortingOrder(System.Int32 value)
    // Offset: 0x13705B4
    void set_sortingOrder(int value);
    // public System.Void set_allowOcclusionWhenDynamic(System.Boolean value)
    // Offset: 0x1370604
    void set_allowOcclusionWhenDynamic(bool value);
    // private System.Int32 GetMaterialCount()
    // Offset: 0x1370654
    int GetMaterialCount();
    // private UnityEngine.Material[] GetSharedMaterialArray()
    // Offset: 0x1370694
    ::Array<UnityEngine::Material*>* GetSharedMaterialArray();
    // public UnityEngine.Material get_material()
    // Offset: 0x13706D4
    UnityEngine::Material* get_material();
    // public System.Void set_material(UnityEngine.Material value)
    // Offset: 0x1370714
    void set_material(UnityEngine::Material* value);
    // public UnityEngine.Material get_sharedMaterial()
    // Offset: 0x1370764
    UnityEngine::Material* get_sharedMaterial();
    // public System.Void set_sharedMaterial(UnityEngine.Material value)
    // Offset: 0x13707A4
    void set_sharedMaterial(UnityEngine::Material* value);
    // public UnityEngine.Material[] get_sharedMaterials()
    // Offset: 0x13707F4
    ::Array<UnityEngine::Material*>* get_sharedMaterials();
    // public System.Void set_sharedMaterials(UnityEngine.Material[] value)
    // Offset: 0x1370834
    void set_sharedMaterials(::Array<UnityEngine::Material*>* value);
    // public System.Void GetSharedMaterials(System.Collections.Generic.List`1<UnityEngine.Material> m)
    // Offset: 0x1370884
    void GetSharedMaterials(System::Collections::Generic::List_1<UnityEngine::Material*>* m);
    // private System.Void get_bounds_Injected(UnityEngine.Bounds ret)
    // Offset: 0x1370024
    void get_bounds_Injected(UnityEngine::Bounds& ret);
  }; // UnityEngine.Renderer
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::Renderer*, "UnityEngine", "Renderer");
#pragma pack(pop)
