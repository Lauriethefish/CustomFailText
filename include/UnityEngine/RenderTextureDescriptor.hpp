// Autogenerated from CppHeaderCreator on 7/24/2020 4:01:27 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.Experimental.Rendering.GraphicsFormat
#include "UnityEngine/Experimental/Rendering/GraphicsFormat.hpp"
// Including type: UnityEngine.Rendering.TextureDimension
#include "UnityEngine/Rendering/TextureDimension.hpp"
// Including type: UnityEngine.Rendering.ShadowSamplingMode
#include "UnityEngine/Rendering/ShadowSamplingMode.hpp"
// Including type: UnityEngine.VRTextureUsage
#include "UnityEngine/VRTextureUsage.hpp"
// Including type: UnityEngine.RenderTextureCreationFlags
#include "UnityEngine/RenderTextureCreationFlags.hpp"
// Including type: UnityEngine.RenderTextureMemoryless
#include "UnityEngine/RenderTextureMemoryless.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: RenderTextureFormat
  struct RenderTextureFormat;
}
// Completed forward declares
// Type namespace: UnityEngine
namespace UnityEngine {
  // Autogenerated type: UnityEngine.RenderTextureDescriptor
  struct RenderTextureDescriptor : public System::ValueType {
    public:
    // private System.Int32 <width>k__BackingField
    // Offset: 0x0
    int width;
    // private System.Int32 <height>k__BackingField
    // Offset: 0x4
    int height;
    // private System.Int32 <msaaSamples>k__BackingField
    // Offset: 0x8
    int msaaSamples;
    // private System.Int32 <volumeDepth>k__BackingField
    // Offset: 0xC
    int volumeDepth;
    // private System.Int32 <mipCount>k__BackingField
    // Offset: 0x10
    int mipCount;
    // private UnityEngine.Experimental.Rendering.GraphicsFormat _graphicsFormat
    // Offset: 0x14
    UnityEngine::Experimental::Rendering::GraphicsFormat graphicsFormat;
    // private UnityEngine.Experimental.Rendering.GraphicsFormat <stencilFormat>k__BackingField
    // Offset: 0x18
    UnityEngine::Experimental::Rendering::GraphicsFormat stencilFormat;
    // private System.Int32 _depthBufferBits
    // Offset: 0x1C
    int depthBufferBits;
    // Get static field: static private System.Int32[] depthFormatBits
    static ::Array<int>* _get_depthFormatBits();
    // Set static field: static private System.Int32[] depthFormatBits
    static void _set_depthFormatBits(::Array<int>* value);
    // private UnityEngine.Rendering.TextureDimension <dimension>k__BackingField
    // Offset: 0x20
    UnityEngine::Rendering::TextureDimension dimension;
    // private UnityEngine.Rendering.ShadowSamplingMode <shadowSamplingMode>k__BackingField
    // Offset: 0x24
    UnityEngine::Rendering::ShadowSamplingMode shadowSamplingMode;
    // private UnityEngine.VRTextureUsage <vrUsage>k__BackingField
    // Offset: 0x28
    UnityEngine::VRTextureUsage vrUsage;
    // private UnityEngine.RenderTextureCreationFlags _flags
    // Offset: 0x2C
    UnityEngine::RenderTextureCreationFlags flags;
    // private UnityEngine.RenderTextureMemoryless <memoryless>k__BackingField
    // Offset: 0x30
    UnityEngine::RenderTextureMemoryless memoryless;
    // Creating value type constructor for type: RenderTextureDescriptor
    RenderTextureDescriptor(int width_ = {}, int height_ = {}, int msaaSamples_ = {}, int volumeDepth_ = {}, int mipCount_ = {}, UnityEngine::Experimental::Rendering::GraphicsFormat graphicsFormat_ = {}, UnityEngine::Experimental::Rendering::GraphicsFormat stencilFormat_ = {}, int depthBufferBits_ = {}, UnityEngine::Rendering::TextureDimension dimension_ = {}, UnityEngine::Rendering::ShadowSamplingMode shadowSamplingMode_ = {}, UnityEngine::VRTextureUsage vrUsage_ = {}, UnityEngine::RenderTextureCreationFlags flags_ = {}, UnityEngine::RenderTextureMemoryless memoryless_ = {}) : width{width_}, height{height_}, msaaSamples{msaaSamples_}, volumeDepth{volumeDepth_}, mipCount{mipCount_}, graphicsFormat{graphicsFormat_}, stencilFormat{stencilFormat_}, depthBufferBits{depthBufferBits_}, dimension{dimension_}, shadowSamplingMode{shadowSamplingMode_}, vrUsage{vrUsage_}, flags{flags_}, memoryless{memoryless_} {}
    // public System.Int32 get_width()
    // Offset: 0xA459C0
    int get_width();
    // public System.Void set_width(System.Int32 value)
    // Offset: 0xA459C8
    void set_width(int value);
    // public System.Int32 get_height()
    // Offset: 0xA459D0
    int get_height();
    // public System.Void set_height(System.Int32 value)
    // Offset: 0xA459D8
    void set_height(int value);
    // public System.Int32 get_msaaSamples()
    // Offset: 0xA459E0
    int get_msaaSamples();
    // public System.Void set_msaaSamples(System.Int32 value)
    // Offset: 0xA459E8
    void set_msaaSamples(int value);
    // public System.Int32 get_volumeDepth()
    // Offset: 0xA459F0
    int get_volumeDepth();
    // public System.Void set_volumeDepth(System.Int32 value)
    // Offset: 0xA459F8
    void set_volumeDepth(int value);
    // public System.Void set_mipCount(System.Int32 value)
    // Offset: 0xA45A00
    void set_mipCount(int value);
    // public UnityEngine.Experimental.Rendering.GraphicsFormat get_graphicsFormat()
    // Offset: 0xA45A08
    UnityEngine::Experimental::Rendering::GraphicsFormat get_graphicsFormat();
    // public System.Void set_graphicsFormat(UnityEngine.Experimental.Rendering.GraphicsFormat value)
    // Offset: 0xA45A10
    void set_graphicsFormat(UnityEngine::Experimental::Rendering::GraphicsFormat value);
    // public UnityEngine.RenderTextureFormat get_colorFormat()
    // Offset: 0xA45A54
    UnityEngine::RenderTextureFormat get_colorFormat();
    // public System.Void set_colorFormat(UnityEngine.RenderTextureFormat value)
    // Offset: 0xA45A60
    void set_colorFormat(UnityEngine::RenderTextureFormat value);
    // public System.Boolean get_sRGB()
    // Offset: 0xA45A68
    bool get_sRGB();
    // public System.Void set_sRGB(System.Boolean value)
    // Offset: 0xA45A74
    void set_sRGB(bool value);
    // public System.Int32 get_depthBufferBits()
    // Offset: 0xA45A80
    int get_depthBufferBits();
    // public System.Void set_depthBufferBits(System.Int32 value)
    // Offset: 0xA45A88
    void set_depthBufferBits(int value);
    // public System.Void set_dimension(UnityEngine.Rendering.TextureDimension value)
    // Offset: 0xA45AB4
    void set_dimension(UnityEngine::Rendering::TextureDimension value);
    // public System.Void set_shadowSamplingMode(UnityEngine.Rendering.ShadowSamplingMode value)
    // Offset: 0xA45ABC
    void set_shadowSamplingMode(UnityEngine::Rendering::ShadowSamplingMode value);
    // public System.Void set_vrUsage(UnityEngine.VRTextureUsage value)
    // Offset: 0xA45AC4
    void set_vrUsage(UnityEngine::VRTextureUsage value);
    // public System.Void set_memoryless(UnityEngine.RenderTextureMemoryless value)
    // Offset: 0xA45ACC
    void set_memoryless(UnityEngine::RenderTextureMemoryless value);
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.RenderTextureFormat colorFormat, System.Int32 depthBufferBits)
    // Offset: 0xA45AD4
    static RenderTextureDescriptor* New_ctor(int width, int height, UnityEngine::RenderTextureFormat colorFormat, int depthBufferBits);
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, System.Int32 depthBufferBits)
    // Offset: 0xA45ADC
    static RenderTextureDescriptor* New_ctor(int width, int height, UnityEngine::Experimental::Rendering::GraphicsFormat colorFormat, int depthBufferBits);
    // public System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, System.Int32 depthBufferBits, System.Int32 mipCount)
    // Offset: 0xA45AE4
    static RenderTextureDescriptor* New_ctor(int width, int height, UnityEngine::Experimental::Rendering::GraphicsFormat colorFormat, int depthBufferBits, int mipCount);
    // private System.Void SetOrClearRenderTextureCreationFlag(System.Boolean value, UnityEngine.RenderTextureCreationFlags flag)
    // Offset: 0xA45AEC
    void SetOrClearRenderTextureCreationFlag(bool value, UnityEngine::RenderTextureCreationFlags flag);
    // public System.Void set_useMipMap(System.Boolean value)
    // Offset: 0xA45B08
    void set_useMipMap(bool value);
    // public System.Void set_autoGenerateMips(System.Boolean value)
    // Offset: 0xA45B24
    void set_autoGenerateMips(bool value);
    // public System.Void set_enableRandomWrite(System.Boolean value)
    // Offset: 0xA45B40
    void set_enableRandomWrite(bool value);
    // System.Void set_createdFromScript(System.Boolean value)
    // Offset: 0xA45B5C
    void set_createdFromScript(bool value);
    // public System.Void set_useDynamicScale(System.Boolean value)
    // Offset: 0xA45B78
    void set_useDynamicScale(bool value);
    // static private System.Void .cctor()
    // Offset: 0x140B970
    static void _cctor();
  }; // UnityEngine.RenderTextureDescriptor
}
DEFINE_IL2CPP_ARG_TYPE(UnityEngine::RenderTextureDescriptor, "UnityEngine", "RenderTextureDescriptor");
#pragma pack(pop)
