// Autogenerated from CppHeaderCreator on 7/24/2020 4:00:24 PM
// Created by Sc2ad
// =========================================================================
#pragma once
#pragma pack(push, 8)
// Begin includes
#include "utils/typedefs.h"
// Including type: System.Object
#include "System/Object.hpp"
#include "utils/il2cpp-utils.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Type
  class Type;
  // Forward declaring type: TypeCode
  struct TypeCode;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: Assembly
  class Assembly;
}
// Completed forward declares
// Type namespace: Microsoft.Reflection
namespace Microsoft::Reflection {
  // Autogenerated type: Microsoft.Reflection.ReflectionExtensions
  class ReflectionExtensions : public ::Il2CppObject {
    public:
    // static public System.Boolean IsEnum(System.Type type)
    // Offset: 0x1091954
    static bool IsEnum(System::Type* type);
    // static public System.Boolean IsAbstract(System.Type type)
    // Offset: 0x1091974
    static bool IsAbstract(System::Type* type);
    // static public System.Boolean IsSealed(System.Type type)
    // Offset: 0x109198C
    static bool IsSealed(System::Type* type);
    // static public System.Type BaseType(System.Type type)
    // Offset: 0x10919A4
    static System::Type* BaseType(System::Type* type);
    // static public System.Reflection.Assembly Assembly(System.Type type)
    // Offset: 0x10919C4
    static System::Reflection::Assembly* Assembly(System::Type* type);
    // static public System.TypeCode GetTypeCode(System.Type type)
    // Offset: 0x10919E4
    static System::TypeCode GetTypeCode(System::Type* type);
    // static public System.Boolean ReflectionOnly(System.Reflection.Assembly assm)
    // Offset: 0x1091A4C
    static bool ReflectionOnly(System::Reflection::Assembly* assm);
  }; // Microsoft.Reflection.ReflectionExtensions
}
DEFINE_IL2CPP_ARG_TYPE(Microsoft::Reflection::ReflectionExtensions*, "Microsoft.Reflection", "ReflectionExtensions");
#pragma pack(pop)
